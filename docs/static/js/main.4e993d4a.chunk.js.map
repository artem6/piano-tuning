{"version":3,"sources":["components/chart.tsx","utils/keys.ts","components/piano.tsx","config.ts","utils/browserAudio.ts","utils/constants.ts","utils/stat.ts","utils/extractHarmonics.ts","utils/findPeaks.ts","utils/predictHarmonics.ts","utils/twoWayMismatchAlgo.ts","utils/useKeyboard.ts","utils/deepCopy.ts","utils/random.ts","utils/entropy.ts","utils/colorGradient.ts","utils/keyMp3.ts","utils/playNote.ts","utils/useVisibility.ts","utils/storageService.ts","utils/autocorrelation.ts","utils/jsonIO.ts","App.tsx","utils/usePolling.ts","utils/useAnimate.ts","utils/zScore.ts","reportWebVitals.ts","index.tsx","components/piano.module.css"],"names":["useCanvasChart","props","canvasRef","useRef","canvasContextRef","width","height","domain","x1","y1","x2","y2","scaleX","pos","Error","scaleY","getCanvasContext","current","getContext","setDomain","newDomain","clear","ctx","clearRect","line","color","strokeStyle","beginPath","moveTo","lineTo","stroke","rect","fillStyle","fillRect","circle","center","radius","arc","x","y","Math","PI","text","start","font","fillText","CanvasChart","ref","style","border","KEYS","key","octave","idx","sharp","hz","name","forEach","pow","COLORS","SHIFTS","Piano","left","whiteKeys","blackKeys","keyNumbers","notes","keyDeets","keyPos","shift","getKeyDeets","console","warn","push","textAnchor","pointerEvents","isPressed","find","n","keyRect","rx","onClick","keyStyles","className","styles","ebony","ivory","lit","filter","Boolean","join","data-ref","configValues","local","sampleRate","fftSize","minDecibels","maxDecibels","currentEnv","config","env","BrowserAudio","audioContext","analyser","freqDataArray","timeDataArray","stepSize","this","creatContextAndAnalyser","navigator","getUserMedia","audio","stream","createMediaStreamSource","connect","err","error","AudioContext","createAnalyser","bufferLength","Uint8Array","getByteFrequencyData","getByteTimeDomainData","CENTS100","CENTS50","CENTS75","CENTS1","max","list","highest","a","extractHarmonics","peaks","fq","length","score","peaksUnused","harmonicsMissing","harmonics","precisionList","Set","map","p","peaksUnusedWeighted","maxPeak","amplitude","i","precision","step","lastFq","currentFq","highestFq","amplitudeSum","ittr","nullCount","lastPeakAmp","matches","peak","match","delete","pop","has","unusedPeakAmp","allPeakAmp","approximateMissingHarmonics","getHarmonicValue","stack","dist","next","prior","prior1","prior2","diff","next1","next2","findPeaks","dataArr","boundary","threshhold","b","c","predictHarmonic","coeff","calcFq","sqrt","generateHarmonics","count","findClosestPeak","target","minPeak","minDist","minAmp","errorRange","abs","twoWayMismatchAlgo","possibleHarmonics","maxAmplitude","errors1","harmonic","totalErr","closest","min","errors2","errors","maxErr","findFundamentalFqUsingTwoWayMismatch","lowFq","highFq","targetHarmonics","offset","h","prediction","predictionPeaks","reduce","peakCenterFq","e","callbacks","onKey","evt","tagName","toLocaleLowerCase","indexOf","metaKey","altKey","shiftKey","ctrlKey","cb","document","addEventListener","useKeyboard","filters","options","useEffect","filteredCb","pressType","filterSet","splitFilter","toLowerCase","replace","split","s","trim","meta","alt","ctrl","k","type","callbackWithFilters","deepCopy","obj","undefined","JSON","parse","stringify","randomInt","floor","random","generateOverlap","decimal","lower","higher","num","den","iter","fraction","l","acceptableIntervals","4","7","12","24","compareKeys","temp","firstPeak","ratio","low","high","ampA","ampB","fA","fB","offsetNote","note","fundamentalFq","fundamentalFqTWM","fundamentalFqAutocorr","minimizeKeyError","targetKey","errorFunc","lastError","lastTune","flopped","itter","testTune","testError","minimizeOctaveInPlace","keys","findTotalEntropy","j","hex","isNaN","round","charAt","substring","convertToRGB","parseInt","KEY_MP3","playNote","duration","context","o","createOscillator","frequency","value","g","createGain","maxGain","zeroGain","sustainedGain","gain","exponentialRampToValueAtTime","currentTime","destination","stop","setTimeout","close","mp3Channels","playMp3","createElement","src","play","useVisibility","useState","hidden","visible","setVisible","listener","window","removeEventListener","memoryStore","USE_LOCAL_STORE","localStorage","LOCAL_STORE_KEY","VALUE_EXPIRATION","lastExpirationCheck","getStore","dataStr","getItem","setStore","setItem","data","storageService","set","expiration","store","Date","now","get","checkForExpired","Object","autoCorrelate","buffer","minFq","maxFq","minK","maxK","ceil","bestR","worstR","bestK","sum","v1","v2","r","findFundamentalFqUsingAutocorrelation","timeData","autocorrelation","autoPeaks","autoPeaksFq","fq1","fq2","largestPeakFq","largestPeakAmp","downloadObjectAsJson","exportObj","exportName","encodeURIComponent","downloadAnchorNode","setAttribute","body","appendChild","click","remove","uploadJsonProps","onChange","files","file","reader","FileReader","onload","result","readAsText","recordedHarmonics","tunedHarmonics","colorGradient","colorStart","colorEnd","colorCount","rgb","end","len","alpha","saida","generateGradient","defaultSettings","mode","noteSounds","tuning","curve","transition","auto","hiddenCharts","App","audioRef","lastValues","autoChange","volume","lastReset","settingsRef","pianoKeyRef","pianoKey","_setPianoKey","setPianoKey","val","setting","interval","timeout","active","polling","clearTimeout","usePolling","_rerender","rerender","keyErrorStyles","keyErrors","currKey","normErr","fill","fn","chartWidth","innerWidth","chartHeight","fftChart","focusedFftChart","predictionChart","autocorrelationChart","harmonicsChart","tunningCurveChart","chartVisible","toggleChart","splice","selectedKeyDef","tunedFundamentalFq","recorededFundamentalFq","harmonicsRecorded","harmonicsTuned","fqData","getFrequencyData","getTimeData","bucketWidth","zScore","samples","lag","signals","sumArr","sum2diffArr","binArr","firstSampleIdx","lastSampleIdx","bin","avg","sum2diff","std","ZScoreBoundary","distBetweenPeaks","medianDistance","adjustmentFactor","closestPeak","timelinePeaksData","extractHarmonicsForKey","targetFq","recordHarmonicsForKey","extracted","curNote","total","mean","nextNote","weight","breakLoop","loop","requestAnimationFrame","background","margin","overflowX","overflowY","generateTunedUsingNoCurve","A440","currOctave","generateTunedUsingFifths","minErr","log","startKey","generateTunedUsingTotalEntropy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4e993d4a.chunk.js","sourcesContent":["import { useRef } from 'react';\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ninterface Vector {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\ninterface CanvasChartProps {\n  canvasRef?: any;\n  width?: number;\n  height?: number;\n  domain?: Vector;\n}\n\nexport const useCanvasChart = (props?: CanvasChartProps) => {\n  const canvasRef = useRef<any>();\n  const canvasContextRef = useRef<CanvasRenderingContext2D>();\n  let { width, height, domain } = props || {};\n  if (!width) width = 1024;\n  if (!height) height = 300;\n  if (!domain) domain = { x1: 0, y1: 0, x2: width, y2: height };\n\n  const scaleX = (pos: number) => {\n    if (!domain || !width) throw new Error();\n    return ((pos - domain.x1) / (domain.x2 - domain.x1)) * width;\n  };\n  const scaleY = (pos: number) => {\n    if (!domain || !height) throw new Error();\n    return ((pos - domain.y1) / (domain.y2 - domain.y1)) * height;\n  };\n\n  const getCanvasContext = () => {\n    if (!canvasContextRef.current && canvasRef.current) canvasContextRef.current = canvasRef.current.getContext('2d');\n    return canvasContextRef.current;\n  };\n\n  return {\n    canvasRef,\n    width,\n    height,\n    getCanvasContext,\n    setDomain: (newDomain: Vector) => {\n      domain = newDomain;\n    },\n    clear: () => {\n      const ctx = getCanvasContext();\n      if (!ctx || !width || !height) return;\n      ctx.clearRect(0, 0, width, height);\n    },\n    line: (line: Vector, color = 'gray') => {\n      const ctx = getCanvasContext();\n      if (!ctx) return;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      ctx.moveTo(scaleX(line.x1), scaleY(line.y1));\n      ctx.lineTo(scaleX(line.x2), scaleY(line.y2));\n      ctx.stroke();\n    },\n    rect: (rect: Vector, color = 'gray') => {\n      const ctx = getCanvasContext();\n      if (!ctx) return;\n      ctx.fillStyle = color;\n      ctx.fillRect(\n        scaleX(rect.x1),\n        scaleY(rect.y1),\n        scaleX(rect.x2) - scaleX(rect.x1),\n        scaleY(rect.y2) - scaleY(rect.y1),\n      );\n    },\n    circle: (center: Point, radius = 5, color = 'gray') => {\n      const ctx = getCanvasContext();\n      if (!ctx) return;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      ctx.arc(scaleX(center.x), scaleY(center.y), radius, 0, 2 * Math.PI);\n      ctx.stroke();\n    },\n    text: (start: Point, text: string, color = 'gray', font = '8px Arial') => {\n      const ctx = getCanvasContext();\n      if (!ctx) return;\n      ctx.fillStyle = color;\n      ctx.font = font;\n\n      ctx.fillText(text, scaleX(start.x), scaleY(start.y));\n    },\n  };\n};\n\nexport const CanvasChart = ({ width, height, canvasRef }: CanvasChartProps) => {\n  return <canvas ref={canvasRef} width={width} height={height} style={{ border: '1px dashed gray' }} />;\n};\n","export interface PianoKey {\n  pos: number;\n  hz: number;\n  name: string;\n  idx: number;\n  key: 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G';\n  sharp: boolean;\n  octave: number;\n}\n\n// prettier-ignore\nexport const KEYS: PianoKey[] = [\n  { pos: 1, key: 'A', octave: 0, idx: 0, sharp: false, hz: 27.5, name: \"A0 Double Pedal A\", },\n  { pos: 2, key: 'A', octave: 0, idx: 0, sharp: true, hz: 29.1352, name: \"A♯0/B♭0\", },\n  { pos: 3, key: 'B', octave: 0, idx: 1, sharp: false, hz: 30.8677, name: \"B0\", },\n  { pos: 4, key: 'C', octave: 1, idx: 2, sharp: false, hz: 32.7032, name: \"C1 Pedal C\", },\n  { pos: 5, key: 'C', octave: 1, idx: 2, sharp: true, hz: 34.6478, name: \"C♯1/D♭1\", },\n  { pos: 6, key: 'D', octave: 1, idx: 3, sharp: false, hz: 36.7081, name: \"D1\", },\n  { pos: 7, key: 'D', octave: 1, idx: 3, sharp: true, hz: 38.8909, name: \"D♯1/E♭1\", },\n  { pos: 8, key: 'E', octave: 1, idx: 4, sharp: false, hz: 41.2034, name: \"E1\", },\n  { pos: 9, key: 'F', octave: 1, idx: 5, sharp: false, hz: 43.6535, name: \"F1\", },\n  { pos: 10, key: 'F', octave: 1, idx: 5, sharp: true, hz: 46.2493, name: \"F♯1/G♭1\", },\n  { pos: 11, key: 'G', octave: 1, idx: 6, sharp: false, hz: 48.9994, name: \"G1\", },\n  { pos: 12, key: 'G', octave: 1, idx: 6, sharp: true, hz: 51.9131, name: \"G♯1/A♭1\", },\n  { pos: 13, key: 'A', octave: 1, idx: 7, sharp: false, hz: 55.0, name: \"A1\", },\n  { pos: 14, key: 'A', octave: 1, idx: 7, sharp: true, hz: 58.2705, name: \"A♯1/B♭1\", },\n  { pos: 15, key: 'B', octave: 1, idx: 8, sharp: false, hz: 61.7354, name: \"B1\", },\n  { pos: 16, key: 'C', octave: 2, idx: 9, sharp: false, hz: 65.4064, name: \"C2 Deep C\", },\n  { pos: 17, key: 'C', octave: 2, idx: 9, sharp: true, hz: 69.2957, name: \"C♯2/D♭2\", },\n  { pos: 18, key: 'D', octave: 2, idx: 10, sharp: false, hz: 73.4162, name: \"D2\", },\n  { pos: 19, key: 'D', octave: 2, idx: 10, sharp: true, hz: 77.7817, name: \"D♯2/E♭2\", },\n  { pos: 20, key: 'E', octave: 2, idx: 11, sharp: false, hz: 82.4069, name: \"E2\", },\n  { pos: 21, key: 'F', octave: 2, idx: 12, sharp: false, hz: 87.3071, name: \"F2\", },\n  { pos: 22, key: 'F', octave: 2, idx: 12, sharp: true, hz: 92.4986, name: \"F♯2/G♭2\", },\n  { pos: 23, key: 'G', octave: 2, idx: 13, sharp: false, hz: 97.9989, name: \"G2\", },\n  { pos: 24, key: 'G', octave: 2, idx: 13, sharp: true, hz: 103.826, name: \"G♯2/A♭2\", },\n  { pos: 25, key: 'A', octave: 2, idx: 14, sharp: false, hz: 110.0, name: \"A2\", },\n  { pos: 26, key: 'A', octave: 2, idx: 14, sharp: true, hz: 116.541, name: \"A♯2/B♭2\", },\n  { pos: 27, key: 'B', octave: 2, idx: 15, sharp: false, hz: 123.471, name: \"B2\", },\n  { pos: 28, key: 'C', octave: 3, idx: 16, sharp: false, hz: 130.813, name: \"C3\", },\n  { pos: 29, key: 'C', octave: 3, idx: 16, sharp: true, hz: 138.591, name: \"C♯3/D♭3\", },\n  { pos: 30, key: 'D', octave: 3, idx: 17, sharp: false, hz: 146.832, name: \"D3\", },\n  { pos: 31, key: 'D', octave: 3, idx: 17, sharp: true, hz: 155.563, name: \"D♯3/E♭3\", },\n  { pos: 32, key: 'E', octave: 3, idx: 18, sharp: false, hz: 164.814, name: \"E3\", },\n  { pos: 33, key: 'F', octave: 3, idx: 19, sharp: false, hz: 174.614, name: \"F3\", },\n  { pos: 34, key: 'F', octave: 3, idx: 19, sharp: true, hz: 184.997, name: \"F♯3/G♭3\", },\n  { pos: 35, key: 'G', octave: 3, idx: 20, sharp: false, hz: 195.998, name: \"G3\", },\n  { pos: 36, key: 'G', octave: 3, idx: 20, sharp: true, hz: 207.652, name: \"G♯3/A♭3\", },\n  { pos: 37, key: 'A', octave: 3, idx: 21, sharp: false, hz: 220.0, name: \"A3\", },\n  { pos: 38, key: 'A', octave: 3, idx: 21, sharp: true, hz: 233.082, name: \"A♯3/B♭3\", },\n  { pos: 39, key: 'B', octave: 3, idx: 22, sharp: false, hz: 246.942, name: \"B3\", },\n  { pos: 40, key: 'C', octave: 4, idx: 23, sharp: false, hz: 261.626, name: \"C4 Middle C\", },\n  { pos: 41, key: 'C', octave: 4, idx: 23, sharp: true, hz: 277.183, name: \"C♯4/D♭4\", },\n  { pos: 42, key: 'D', octave: 4, idx: 24, sharp: false, hz: 293.665, name: \"D4\", },\n  { pos: 43, key: 'D', octave: 4, idx: 24, sharp: true, hz: 311.127, name: \"D♯4/E♭4\", },\n  { pos: 44, key: 'E', octave: 4, idx: 25, sharp: false, hz: 329.628, name: \"E4\", },\n  { pos: 45, key: 'F', octave: 4, idx: 26, sharp: false, hz: 349.228, name: \"F4\", },\n  { pos: 46, key: 'F', octave: 4, idx: 26, sharp: true, hz: 369.994, name: \"F♯4/G♭4\", },\n  { pos: 47, key: 'G', octave: 4, idx: 27, sharp: false, hz: 391.995, name: \"G4\", },\n  { pos: 48, key: 'G', octave: 4, idx: 27, sharp: true, hz: 415.305, name: \"G♯4/A♭4\", },\n  { pos: 49, key: 'A', octave: 4, idx: 28, sharp: false, hz: 440.0, name: \"A4 A440\", },\n  { pos: 50, key: 'A', octave: 4, idx: 28, sharp: true, hz: 466.164, name: \"A♯4/B♭4\", },\n  { pos: 51, key: 'B', octave: 4, idx: 29, sharp: false, hz: 493.883, name: \"B4\", },\n  { pos: 52, key: 'C', octave: 5, idx: 30, sharp: false, hz: 523.251, name: \"C5 Tenor C\", },\n  { pos: 53, key: 'C', octave: 5, idx: 30, sharp: true, hz: 554.365, name: \"C♯5/D♭5\", },\n  { pos: 54, key: 'D', octave: 5, idx: 31, sharp: false, hz: 587.33, name: \"D5\", },\n  { pos: 55, key: 'D', octave: 5, idx: 31, sharp: true, hz: 622.254, name: \"D♯5/E♭5\", },\n  { pos: 56, key: 'E', octave: 5, idx: 32, sharp: false, hz: 659.255, name: \"E5\", },\n  { pos: 57, key: 'F', octave: 5, idx: 33, sharp: false, hz: 698.456, name: \"F5\", },\n  { pos: 58, key: 'F', octave: 5, idx: 33, sharp: true, hz: 739.989, name: \"F♯5/G♭5\", },\n  { pos: 59, key: 'G', octave: 5, idx: 34, sharp: false, hz: 783.991, name: \"G5\", },\n  { pos: 60, key: 'G', octave: 5, idx: 34, sharp: true, hz: 830.609, name: \"G♯5/A♭5\", },\n  { pos: 61, key: 'A', octave: 5, idx: 35, sharp: false, hz: 880.0, name: \"A5\", },\n  { pos: 62, key: 'A', octave: 5, idx: 35, sharp: true, hz: 932.328, name: \"A♯5/B♭5\", },\n  { pos: 63, key: 'B', octave: 5, idx: 36, sharp: false, hz: 987.767, name: \"B5\", },\n  { pos: 64, key: 'C', octave: 6, idx: 37, sharp: false, hz: 1046.5, name: \"C6 Soprano C(High C)\", },\n  { pos: 65, key: 'C', octave: 6, idx: 37, sharp: true, hz: 1108.73, name: \"C♯6/D♭6\", },\n  { pos: 66, key: 'D', octave: 6, idx: 38, sharp: false, hz: 1174.66, name: \"D6\", },\n  { pos: 67, key: 'D', octave: 6, idx: 38, sharp: true, hz: 1244.51, name: \"D♯6/E♭6\", },\n  { pos: 68, key: 'E', octave: 6, idx: 39, sharp: false, hz: 1318.51, name: \"E6\", },\n  { pos: 69, key: 'F', octave: 6, idx: 40, sharp: false, hz: 1396.91, name: \"F6\", },\n  { pos: 70, key: 'F', octave: 6, idx: 40, sharp: true, hz: 1479.98, name: \"F♯6/G♭6\", },\n  { pos: 71, key: 'G', octave: 6, idx: 41, sharp: false, hz: 1567.98, name: \"G6\", },\n  { pos: 72, key: 'G', octave: 6, idx: 41, sharp: true, hz: 1661.22, name: \"G♯6/A♭6\", },\n  { pos: 73, key: 'A', octave: 6, idx: 42, sharp: false, hz: 1760.0, name: \"A6\", },\n  { pos: 74, key: 'A', octave: 6, idx: 42, sharp: true, hz: 1864.66, name: \"A♯6/B♭6\", },\n  { pos: 75, key: 'B', octave: 6, idx: 43, sharp: false, hz: 1975.53, name: \"B6\", },\n  { pos: 76, key: 'C', octave: 7, idx: 44, sharp: false, hz: 2093.0, name: \"C7 Double high C\", },\n  { pos: 77, key: 'C', octave: 7, idx: 44, sharp: true, hz: 2217.46, name: \"C♯7/D♭7\", },\n  { pos: 78, key: 'D', octave: 7, idx: 45, sharp: false, hz: 2349.32, name: \"D7\", },\n  { pos: 79, key: 'D', octave: 7, idx: 45, sharp: true, hz: 2489.02, name: \"D♯7/E♭7\", },\n  { pos: 80, key: 'E', octave: 7, idx: 46, sharp: false, hz: 2637.02, name: \"E7\", },\n  { pos: 81, key: 'F', octave: 7, idx: 47, sharp: false, hz: 2793.83, name: \"F7\", },\n  { pos: 82, key: 'F', octave: 7, idx: 47, sharp: true, hz: 2959.96, name: \"F♯7/G♭7\", },\n  { pos: 83, key: 'G', octave: 7, idx: 48, sharp: false, hz: 3135.96, name: \"G7\", },\n  { pos: 84, key: 'G', octave: 7, idx: 48, sharp: true, hz: 3322.44, name: \"G♯7/A♭7\", },\n  { pos: 85, key: 'A', octave: 7, idx: 49, sharp: false, hz: 3520.0, name: \"A7\", },\n  { pos: 86, key: 'A', octave: 7, idx: 49, sharp: true, hz: 3729.31, name: \"A♯7/B♭7\", },\n  { pos: 87, key: 'B', octave: 7, idx: 50, sharp: false, hz: 3951.07, name: \"B7\", },\n  { pos: 88, key: 'C', octave: 8, idx: 51, sharp: false, hz: 4186.01, name: \"C8 Eighth octave\",  }\n];\n\n// more precise frequencies\nKEYS.forEach(key => (key.hz = 27.5 * Math.pow(Math.pow(2, 1 / 12), key.pos - 1)));\n","import React from 'react';\n\nimport { KEYS, PianoKey } from '../utils/keys';\nimport styles from './piano.module.css';\n\nconst COLORS = {\n  EBONY: 'ebony',\n  IVORY: 'ivory',\n};\nconst SHIFTS = {\n  LEFT: 'LEFT',\n  MIDDLE: 'MIDDLE',\n  RIGHT: 'RIGHT',\n};\n\nfunction getKeyDeets(keyPos: number) {\n  const key = keyPos % 12;\n  let shift;\n  let color;\n\n  if (key === 2 || key === 7) {\n    shift = SHIFTS.RIGHT;\n    color = COLORS.EBONY;\n  } else if (key === 5 || key === 10) {\n    shift = SHIFTS.LEFT;\n    color = COLORS.EBONY;\n  } else if (key === 0) {\n    shift = SHIFTS.MIDDLE;\n    color = COLORS.EBONY;\n  } else {\n    shift = null;\n    color = COLORS.IVORY;\n  }\n  return { shift, color };\n}\n\ninterface props {\n  notes?: PianoKey[];\n  onClick?: { (key: number): unknown };\n  keyStyles?: { [key: number]: any };\n}\n\nexport const Piano: React.FC<props> = props => {\n  let left = 30;\n  const whiteKeys: any[] = [];\n  const blackKeys: any[] = [];\n  const keyNumbers: any[] = [];\n\n  const notes = props.notes || [];\n\n  KEYS.forEach(key => {\n    const keyDeets = getKeyDeets(key.pos);\n    let x = left;\n    let height = 125;\n    let width = 22;\n\n    if (keyDeets.color === COLORS.EBONY) {\n      height -= 45;\n      width = 11;\n\n      if (keyDeets.shift === SHIFTS.LEFT) {\n        x = left - 7;\n      } else if (keyDeets.shift === SHIFTS.MIDDLE) {\n        x = left - 5;\n      } else if (keyDeets.shift === SHIFTS.RIGHT) {\n        x = left - 3;\n      } else {\n        console.warn('SHIFT was not set');\n      }\n    } else {\n      left += 22;\n      keyNumbers.push(\n        <text key={key.pos + 'number'} x={x + width / 2} y={10} textAnchor='middle'>\n          {key.pos}\n        </text>,\n      );\n      keyNumbers.push(\n        <text style={{ pointerEvents: 'none' }} key={key.pos + 'key'} x={x + width / 2} y={120} textAnchor='middle'>\n          {key.key}\n        </text>,\n      );\n    }\n\n    const isPressed = !!notes.find(n => n.pos === key.pos);\n\n    const keyRect = (\n      <rect\n        key={key.pos}\n        rx={2}\n        x={x}\n        y={14}\n        width={width}\n        height={height}\n        onClick={() => props.onClick?.(key.pos - 1)}\n        style={props.keyStyles?.[key.pos]}\n        className={[\n          styles.key,\n          keyDeets.color === COLORS.EBONY ? styles.ebony : styles.ivory,\n          isPressed ? styles.lit : '',\n        ]\n          .filter(Boolean)\n          .join(' ')}\n      />\n    );\n\n    if (keyDeets.color === COLORS.EBONY) {\n      blackKeys.push(keyRect);\n    } else {\n      whiteKeys.push(keyRect);\n    }\n  });\n  return (\n    <svg data-ref='piano' width='1200' height='200'>\n      {whiteKeys}\n      {keyNumbers}\n      {blackKeys}\n    </svg>\n  );\n};\n","const configValues = {\n  local: {\n    sampleRate: 44100, // audioContext.sampleRate\n    fftSize: 16384 * 2, // analyser.fftSize = 32 - 16384 - 32768;\n    minDecibels: -90, // analyser.minDecibels = -90;\n    maxDecibels: -10, // analyser.maxDecibels = -10;\n  },\n};\n\ntype ConfigValues = typeof configValues;\nexport type ConfigEnv = keyof ConfigValues;\nexport type ConfigTypes = keyof ConfigValues['local'];\n\nlet currentEnv: ConfigEnv = 'local';\n\nfunction setConfigEnv(env: ConfigEnv) {\n  currentEnv = env;\n  localStorage.setItem('env', env);\n}\n\nconst config = <T extends ConfigTypes>(key: T, env: ConfigEnv = currentEnv): ConfigValues['local'][T] => {\n  return configValues[env][key];\n};\n\nexport default config;\nexport { setConfigEnv };\n","import { useRef } from 'react';\n\ninterface BrowserAudioConfig {\n  fftSize?: number;\n  minDecibels?: number;\n  maxDecibels?: number;\n}\n\nexport class BrowserAudio {\n  audioContext!: AudioContext;\n  analyser!: AnalyserNode;\n\n  sampleRate!: number;\n  fftSize!: number;\n\n  freqDataArray!: Uint8Array;\n  timeDataArray!: Uint8Array;\n  stepSize!: number;\n\n  creatContextAndAnalyser(config?: BrowserAudioConfig) {\n    this.audioContext = new AudioContext();\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = config?.fftSize || 16384 * 2;\n    this.analyser.minDecibels = config?.minDecibels || -90;\n    this.analyser.maxDecibels = config?.maxDecibels || -10;\n\n    this.sampleRate = this.audioContext.sampleRate;\n    this.fftSize = this.analyser.fftSize;\n    this.stepSize = this.sampleRate / this.fftSize;\n\n    const bufferLength = this.fftSize / 2;\n\n    this.freqDataArray = new Uint8Array(bufferLength);\n    this.timeDataArray = new Uint8Array(bufferLength);\n  }\n\n  constructor(config?: BrowserAudioConfig) {\n    this.creatContextAndAnalyser(config);\n    navigator.getUserMedia(\n      { audio: true },\n      stream => {\n        const audioSource = this.audioContext.createMediaStreamSource(stream);\n        audioSource.connect(this.analyser);\n      },\n      err => {\n        err && console.error(err);\n      },\n    );\n  }\n\n  getFrequencyData() {\n    this.analyser.getByteFrequencyData(this.freqDataArray);\n    return this.freqDataArray;\n  }\n  getTimeData() {\n    this.analyser.getByteTimeDomainData(this.timeDataArray);\n    return this.timeDataArray;\n  }\n}\n\nexport const useBrowserAudio = (props?: BrowserAudioConfig) => {\n  const ref = useRef<BrowserAudio>();\n  if (!ref.current) ref.current = new BrowserAudio(props);\n  return ref.current;\n};\n","export const CENTS100 = Math.pow(2, 1 / 12);\nexport const CENTS50 = (CENTS100 - 1) / 2 + 1;\nexport const CENTS75 = (CENTS100 - 1) * 0.75 + 1;\nexport const CENTS10 = (CENTS100 - 1) / 10 + 1;\nexport const CENTS1 = (CENTS100 - 1) / 100 + 1;\n","export const mean = (list: number[] | Uint8Array) => {\n  let total = 0;\n  list.forEach((a: number) => (total += a));\n  total /= list.length;\n  return total;\n};\n\nexport const max = (list: number[] | Uint8Array) => {\n  let highest: number | null = null;\n  list.forEach((a: number) => {\n    if (highest === null || a > highest) highest = a;\n  });\n  return highest;\n};\n","import { CENTS100, CENTS50, CENTS75 } from './constants';\nimport { Peak } from './findPeaks';\nimport { KEYS } from './keys';\nimport { max } from './stat';\n\n// given peaks and a fundamental frequency, find all harmonics in those peaks\nexport const extractHarmonics = (peaks: Peak[], fq: number) => {\n  if (!peaks.length) return { score: 0, error: 1 / 0, peaksUnused: 0, harmonicsMissing: 0, harmonics: [] };\n  const harmonics: (Peak | null)[] = [];\n  let score = 0;\n  const precisionList = [CENTS50, CENTS75, CENTS100];\n  const peaksUnused = new Set(peaks.map(p => p.center));\n  let peaksUnusedWeighted = 0;\n  let harmonicsMissing = 0;\n  let error = 0;\n  const maxPeak = max(peaks.map(p => p.amplitude)) || 0;\n\n  for (let i = 0; i < precisionList.length; i++) {\n    const precision = precisionList[i];\n    let step = fq;\n    let lastFq = 0;\n    let currentFq = 0;\n\n    const highestFq = peaks[peaks.length - 1].center;\n\n    let amplitudeSum = 0;\n    let ittr = 0;\n    let nullCount = 0;\n    harmonicsMissing = 0;\n    error = 0;\n    let lastPeakAmp = maxPeak * 0.5;\n    while (currentFq * precision < highestFq && ittr++ < 50) {\n      lastFq = currentFq;\n      currentFq += step;\n      if (nullCount >= 5) break;\n\n      const matches = peaks.filter(\n        // eslint-disable-next-line no-loop-func\n        peak => peak.center >= currentFq / precision && peak.center <= currentFq * precision,\n      );\n      if (!matches.length) {\n        nullCount++;\n        harmonics.push(null);\n        harmonicsMissing++;\n        error += lastPeakAmp * 0.8; // max amplitude is 255\n      } else {\n        nullCount = 0;\n        let peak = matches[0];\n        matches.forEach(match => {\n          peaksUnused.delete(match.center);\n          if (match.amplitude > peak.amplitude) peak = match;\n        });\n        harmonics.push(peak);\n        amplitudeSum += peak.amplitude;\n        lastPeakAmp += peak.amplitude;\n        step = Math.max(peak.center - lastFq, step);\n      }\n    }\n    while (harmonics[harmonics.length - 1] === null) {\n      harmonics.pop();\n      harmonicsMissing--;\n    }\n\n    // turn missing harmonics into percentage\n    harmonicsMissing = harmonicsMissing / harmonics.length;\n\n    // error right now is only for missing harmonics, so adjust it to normalize by total harmonics\n    error /= harmonics.length;\n\n    score = amplitudeSum; // + harmonics.filter(Boolean).length * 255;\n    // eslint-disable-next-line no-loop-func\n    peaks.forEach(peak => {\n      if (peaksUnused.has(peak.center)) error += peak.amplitude;\n    });\n\n    // reduce unusued peak count if the peaks are really small\n    let unusedPeakAmp = 0;\n    let allPeakAmp = 0;\n    peaks.forEach(peak => {\n      // if (peak.amplitude < maxPeak * 0.5) peaksUnused.delete(peak.center);\n      if (peaksUnused.has(peak.center)) unusedPeakAmp += peak.amplitude;\n      allPeakAmp += peak.amplitude;\n    });\n    peaksUnusedWeighted = unusedPeakAmp / allPeakAmp;\n\n    // the larger the precision we need to use the higher the error should be\n    if (precision === CENTS75) error += 5000;\n    if (precision === CENTS100) error += 10000;\n\n    if (score) break;\n  }\n  return { score, error, peaksUnused: peaksUnusedWeighted, harmonicsMissing, harmonics };\n};\n\nexport const approximateMissingHarmonics = (peaks: (Peak | null)[]) => {\n  peaks = [...(peaks || [])];\n\n  let data = peaks.filter(Boolean).length;\n  if (data / peaks.length < 0.3) return peaks;\n\n  const getHarmonicValue = (idx: number, stack = 0): number | null => {\n    let center = peaks[idx]?.center || null;\n    if (center) return center;\n    if (stack === 3) return null;\n    const dist = 5;\n    if (!peaks[idx - 1]) {\n      const next1 = getHarmonicValue(idx + 1, stack + 1);\n      const next2 = getHarmonicValue(idx + 1 + dist, stack + 1);\n      if (next1 === null || next2 === null) center = null;\n      else {\n        const diff = (next2 - next1) / dist;\n        // console.log(idx, diff);\n        center = next1 - diff;\n      }\n    } else if (!peaks[idx + 1]) {\n      const prior1 = getHarmonicValue(idx - 1, stack + 1);\n      const prior2 = getHarmonicValue(idx - 1 - dist, stack + 1);\n      if (prior1 === null || prior2 === null) center = null;\n      else {\n        const diff = (prior1 - prior2) / dist;\n        center = prior1 + diff;\n      }\n    } else {\n      const next = getHarmonicValue(idx + 1, stack + 1);\n      const prior = getHarmonicValue(idx - 1, stack + 1);\n      if (next === null || prior === null) center = null;\n      else {\n        center = (next + prior) / 2;\n      }\n    }\n    if (center !== null) peaks[idx] = { center, amplitude: 0 };\n\n    return center;\n  };\n\n  peaks.forEach((peak, idx) => getHarmonicValue(idx));\n  return peaks;\n};\n\nexport const medianSpaceBetweenHarmonics = (peaks: (Peak | null)[]) => {\n  const dist: number[] = [];\n  let last: number | undefined = 0;\n  peaks.forEach(peak => {\n    if (peak?.center && last !== undefined) {\n      dist.push(peak.center - last);\n    }\n    last = peak?.center;\n  });\n  dist.sort();\n  return dist[Math.floor(dist.length / 2)];\n};\n\nexport const predictKeyFromHarmonics = (peaks: Peak[]) => {\n  type Prediction = ReturnType<typeof extractHarmonics>;\n  const prediction: Prediction[] = [];\n  let bestPrediction: Prediction | null = null;\n  KEYS.forEach(key => {\n    const keyPrediction = extractHarmonics(peaks, key.hz);\n    // console.log(error, peaksUnused, harmonicsMissing);\n    prediction.push(keyPrediction);\n    if (\n      (!bestPrediction || bestPrediction.error > keyPrediction.error) &&\n      keyPrediction.harmonicsMissing < 0.34 &&\n      keyPrediction.peaksUnused < 0.5\n    ) {\n      bestPrediction = keyPrediction;\n    }\n  });\n  return {\n    key: bestPrediction ? prediction.indexOf(bestPrediction) + 1 : -1,\n    bestPrediction: bestPrediction as Prediction | null,\n    prediction,\n  };\n};\n","export interface Peak {\n  center: number;\n  amplitude: number;\n}\n\n// finds the peaks from an FFT\nexport function findPeaks(dataArr: Uint8Array | number[], boundary: number | Uint8Array | number[]): Peak[] {\n  const peaks: { center: number; amplitude: number }[] = [];\n\n  for (let i = 1; i < dataArr.length - 1; i++) {\n    const threshhold = typeof boundary === 'number' ? boundary : boundary[i];\n    // peak detection\n    const a = dataArr[i - 1];\n    const b = dataArr[i];\n    const c = dataArr[i + 1];\n    if (b > threshhold && b >= a && b >= c) {\n      // parabolic interpolation\n      const center = i + (0.5 * (a - c)) / (a - 2 * b + c);\n      const amplitude = b - 0.25 * (center - i) * (a - c);\n      peaks.push({ center, amplitude });\n    }\n  }\n\n  return peaks;\n}\n","import { Peak } from './findPeaks';\n\nexport const predictHarmonic = (fq: number, n: number, coeff: number = 0.00055) => {\n  const calcFq = fq * (n + 1) * Math.sqrt(1 + coeff * n * n);\n  return calcFq;\n};\n\nexport const generateHarmonics = (fq: number, count: number, coeff: number = 0.00055) => {\n  const peaks: Peak[] = [];\n  for (let i = 0; i <= count; i++) {\n    peaks.push({ amplitude: 255 - i * 10, center: predictHarmonic(fq, i, coeff) });\n  }\n  return peaks;\n};\n","import { CENTS50 } from './constants';\nimport { findPeaks, Peak } from './findPeaks';\nimport { KEYS } from './keys';\nimport { generateHarmonics } from './predictHarmonics';\n\nexport const findClosestPeak = (peaks: Peak[], target: number) => {\n  let minDist: number | null = null;\n  let minAmp = 0;\n  let minPeak: Peak | undefined;\n\n  const errorRange = CENTS50;\n  peaks.forEach(peak => {\n    const dist = Math.abs(target - peak.center);\n    if (minDist === null || dist < minDist / errorRange || (dist < minDist * errorRange && minAmp <= peak.amplitude)) {\n      minDist = dist;\n      minAmp = peak.amplitude;\n      minPeak = peak;\n    }\n  });\n  if (!minPeak) throw new Error();\n  return minPeak;\n};\n\nexport const twoWayMismatchAlgo = (peaks: Peak[], possibleHarmonics: Peak[][]) => {\n  const p = 0.5; // weighting by frequency value?\n  const q = 1.4; // weighting related to magnitude of peaks?\n  const r = 0.5; // scaling related to magnitude of peaks?\n  const rho = 0.33; // weighting of MP (measured to predicted) error\n  // const harmonicWeight = 0.9; // further harmonics are treated as less important\n\n  const maxAmplitude = 255;\n\n  // predicted to measured mismatch\n  const errors1: number[] = [];\n  possibleHarmonics.forEach(harmonic => {\n    let totalErr = 0;\n    harmonic.forEach((peak, idx) => {\n      const closest = findClosestPeak(peaks, peak.center);\n      if (2 > 1) {\n        const dist = Math.abs(closest.center - peak.center) / peak.center;\n        let err = -0.5;\n        if (dist < CENTS50) {\n          err = Math.min(closest.amplitude / maxAmplitude / dist, 100);\n        }\n        totalErr += err / harmonic.length;\n      } else {\n        // real formula\n        const dist = Math.abs(closest.center - peak.center);\n        const err =\n          dist * Math.pow(closest.center, -p) +\n          (closest.amplitude / maxAmplitude) * (q * dist * Math.pow(closest.center, -p) - r);\n        totalErr += err;\n      }\n    });\n    errors1.push(totalErr);\n  });\n\n  // measured to predicted mismatch\n  const errors2: number[] = [];\n  peaks.forEach((peak, idx) => {\n    possibleHarmonics.forEach((harmonic, idx) => {\n      const closest = findClosestPeak(harmonic, peak.center);\n      errors2[idx] = errors2[idx] || 0;\n\n      if (2 > 1) {\n        const dist = Math.abs(closest.center - peak.center) / closest.center;\n        let err = -0.5 * (peak.amplitude / maxAmplitude); // if the measured peak is small, then don't deduct as much\n        if (dist < CENTS50) {\n          err = Math.min(peak.amplitude / maxAmplitude / dist, 100);\n        }\n        errors2[idx] += err / peaks.length;\n      } else {\n        // real formula\n        const dist = Math.abs(closest.center - peak.center);\n        const err =\n          dist * Math.pow(peak.center, -p) +\n          (peak.amplitude / maxAmplitude) * (q * dist * Math.pow(peak.center, -p) - r);\n        errors2[idx] += err;\n      }\n    });\n  });\n\n  // combine the two errors\n  const errors: number[] = [];\n  let maxErr = 0;\n  for (let i = 0; i < errors1.length; i++) {\n    errors[i] = errors1[i] + errors2[i] * rho;\n    if (errors[i] > maxErr) maxErr = errors[i];\n  }\n\n  // normalize to 0-1\n  for (let i = 0; i < errors.length; i++) {\n    errors[i] = errors[i] / maxErr;\n  }\n\n  return errors;\n};\n\nexport const findFundamentalFqUsingTwoWayMismatch = ({\n  lowFq,\n  highFq,\n  stepSize,\n  peaks,\n  targetHarmonics,\n}: {\n  lowFq: number;\n  highFq: number;\n  stepSize: number;\n  peaks: Peak[];\n  targetHarmonics: (fq: number) => Peak[];\n}) => {\n  try {\n    const harmonics: Peak[][] = [];\n    for (let i = lowFq; i < highFq; i += stepSize) {\n      const offset = i / (targetHarmonics(i)[0]?.center || i);\n      harmonics.push(targetHarmonics(i).map(h => ({ ...h, center: (h?.center || 0) * offset })));\n    }\n\n    const prediction = twoWayMismatchAlgo(peaks, harmonics);\n    const predictionPeaks = findPeaks(prediction, 0.2);\n    const maxPeak = predictionPeaks.length\n      ? predictionPeaks.reduce((a, b) => (a.amplitude > b.amplitude ? a : b))\n      : null;\n    const peakCenterFq = lowFq + (maxPeak?.center || 0) * stepSize;\n\n    return {\n      prediction,\n      maxPeak,\n      peakCenterFq,\n    };\n  } catch (e) {\n    return { prediction: [], maxPeak: null, peakCenterFq: 0 };\n  }\n};\n\nexport const findClosestKeyUsingTwoWayMismatch = (peaks: Peak[]) => {\n  if (!peaks?.length) return [];\n  const maxFq = peaks[peaks.length - 1].center;\n  const harmonics = KEYS.map(key => generateHarmonics(key.hz, Math.round(maxFq / key.hz)));\n  const prediction = twoWayMismatchAlgo(peaks, harmonics);\n  return prediction;\n};\n","import { useEffect } from 'react';\n\ntype KeyboardCallback = { (evt: KeyboardEvent): unknown };\ninterface KeyOptions {\n  pressType?: ('keyup' | 'keydown' | 'keypress')[];\n}\n\nlet currentKeys = {\n  metaKey: false,\n  altKey: false,\n  shiftKey: false,\n  ctrlKey: false,\n};\n\n// register global listener\nlet callbacks: KeyboardCallback[] = [];\nconst onKey = (evt: KeyboardEvent) => {\n  const target = evt && (evt.target as HTMLInputElement);\n  const tagName = target.tagName.toLocaleLowerCase();\n  if (['input', 'textfield', 'textarea'].indexOf(tagName) > -1) return;\n  currentKeys = {\n    metaKey: evt.metaKey,\n    altKey: evt.altKey,\n    shiftKey: evt.shiftKey,\n    ctrlKey: evt.ctrlKey,\n  };\n\n  callbacks.forEach(cb => cb(evt));\n};\ndocument.addEventListener('keydown', onKey, false);\ndocument.addEventListener('keyup', onKey, false);\ndocument.addEventListener('keypress', onKey, false);\n\n// filter the callback\nconst callbackWithFilters = (\n  filters: string | string[],\n  cb: KeyboardCallback,\n  options: KeyOptions,\n): KeyboardCallback => {\n  if (!filters.length) return cb;\n\n  const pressType = options.pressType || ['keydown'];\n\n  const filterSet = new Set(\n    (typeof filters === 'string' ? [filters] : filters).map(filter => {\n      const splitFilter = filter\n        .toLowerCase()\n        .replace('++', '+plus')\n        .replace('+ +', '+plus')\n        .replace(/^\\+/, 'plus')\n        .split('+')\n        .map(s => s.trim())\n        .map(s => (s === 'plus' ? '+' : s === '' ? ' ' : s));\n\n      let meta = false;\n      let alt = false;\n      let shift = false;\n      let ctrl = false;\n      let key = splitFilter[splitFilter.length - 1];\n      splitFilter.forEach(k => {\n        // meta not on windows\n        if (k === 'meta' || k === 'command' || k === 'cmd') meta = true;\n        else if (k === 'option' || k === 'alt') alt = true;\n        else if (k === 'shift') shift = true;\n        else if (k === 'control' || k === 'ctrl') ctrl = true;\n        else key = k;\n      });\n      return `${meta}+${alt}+${shift}+${ctrl}+${key}`;\n    }),\n  );\n\n  return evt => {\n    const key = `${evt.metaKey}+${evt.altKey}+${evt.shiftKey}+${evt.ctrlKey}+${evt.key}`.toLowerCase();\n    if (filters.length && !filterSet.has(key)) return;\n    if (pressType.indexOf(evt.type as any) === -1) return;\n    cb(evt);\n  };\n};\n\n/*\nuseful key modifiers\n  Alt (option on mac)\n  Shift\n  Control\n  Meta (command on mac, not on windows)\n\nuseful keys\n  ArrowUp\n  ArrowDown\n  ArrowLeft\n  ArrowRight\n  Tab\n  Enter\n  Backspace\n\nnotes\n  watch out for keys that need \"Shift\" to be pressed\n\nexamples\n  \"Shift + +\"\n  \"Shift + ^\"\n  \"Alt + ArrowLeft\"\n  \"ArrowUp\"\n*/\nexport const useKeyboard = (filters: string | string[], cb: KeyboardCallback, options?: KeyOptions) => {\n  useEffect(() => {\n    const filteredCb = callbackWithFilters(filters, cb, { pressType: options?.pressType });\n    callbacks.push(filteredCb);\n    return () => {\n      callbacks = callbacks.filter(c => c !== filteredCb);\n    };\n  }, [filters, cb, options?.pressType]);\n};\n\nexport const getCurrentKeysPressed = () => currentKeys;\n","export function deepCopy<T>(obj: T): T {\n  if (obj === undefined) return obj;\n  return JSON.parse(JSON.stringify(obj));\n}\n","// random between 0 and max - 1\nexport const randomInt = (max: number) => Math.floor(Math.random() * max);\n\nexport const selectOneRandomly = <T>(list: T[]) => list[randomInt(list.length)];\n\nexport const randomizeList = <T>(list: T[]) => {\n  list = [...list];\n  for (let i = 0; i < list.length; i++) {\n    const j = randomInt(list.length - i) + i;\n    const temp = list[i];\n    list[i] = list[j];\n    list[j] = temp;\n  }\n  return list;\n};\n","import { CENTS1 } from './constants';\nimport { deepCopy } from './deepCopy';\nimport { approximateMissingHarmonics } from './extractHarmonics';\nimport { Peak } from './findPeaks';\nimport { KEYS } from './keys';\nimport { randomInt } from './random';\n\nconst cutoff = 20;\n\ninterface KeyData {\n  key: number;\n  fundamentalFq: number;\n  fundamentalFqTWM: number;\n  fundamentalFqAutocorr: number;\n  harmonics: (Peak | null)[];\n}\n\n/*\n  1.25 = third\n  1.5 = fifth\n  2 = octave\n\n  1,   2,   3,   4,   5,   6,   7,   8,   9,   10\n  1.25, 2.5, 3.75,    5, 6.25, 7.5, 8.75,      10\n    1.5,    3,    4.5,     6,     7.5,    9\n       2,        4,        6,        8,        10\n*/\n\nconst fraction = (decimal: number) => {\n  let num = 1;\n  let den = 1;\n  let iter = 0;\n  while (true) {\n    if (iter++ > 1000) throw new Error('not a fraction');\n    if (num / den < decimal) {\n      num++;\n      den = 1;\n    }\n    if (num / den > decimal) {\n      den++;\n    }\n    if (num / den === decimal) break;\n  }\n  return [num, den];\n};\n\nconst generateOverlap = (decimal: number) => {\n  let lower: number[] = [];\n  let higher: number[] = [];\n\n  let [num, den] = fraction(decimal);\n  let l = 0;\n  let h = 0;\n  for (let i = 0; i < 20; i++) {\n    l += num;\n    h += den;\n    lower.push(l - 1);\n    higher.push(h - 1);\n  }\n  return [lower, higher];\n};\n\nconst acceptableIntervals: { [interval: number]: number } = {\n  4: 1.25, // third\n  7: 1.5, // fifth\n  12: 2, // octave\n  24: 4, // 2 * octave\n  // 36: 6, // 3 * octave\n};\n\nexport const compareKeys = (a: KeyData, b: KeyData) => {\n  if (!a || !b) return null;\n  let error: number[] = [];\n\n  if (b.key < a.key) {\n    const temp = a;\n    a = b;\n    b = temp;\n  }\n\n  // if a note doesn't have a harmonic, approximate one using a multiple\n  const firstPeak = a.harmonics[0];\n  if (a.harmonics.length <= 2 && !a.harmonics[1] && firstPeak) {\n    a = { ...a, harmonics: [...a.harmonics] };\n    a.harmonics[1] = { amplitude: firstPeak.amplitude, center: firstPeak.center * 2.01 };\n  }\n\n  const ratio = acceptableIntervals[b.key - a.key];\n  if (!ratio) return null;\n\n  const [low, high] = generateOverlap(ratio);\n\n  // console.log(a, b);\n  // console.log(low, high);\n\n  for (let i = 0; i < low.length; i++) {\n    if (low[i] >= a.harmonics.length) break;\n    if (high[i] >= b.harmonics.length) break;\n    const ampA = a.harmonics[low[i]]?.amplitude || 0;\n    const ampB = b.harmonics[high[i]]?.amplitude || 0;\n    if (ampA < cutoff) break;\n    if (ampB < cutoff) break;\n    let fA = a.harmonics[low[i]]?.center || 0;\n    let fB = b.harmonics[high[i]]?.center || 0;\n    // console.log(fA, fB);\n\n    const offset = Math.abs((fA - fB) / fA) * (ampA / 255) * (ampB / 255);\n    error.push(offset);\n  }\n  if (!error.length) return null;\n  const meanError = error.reduce((a, b) => a + b) / error.length;\n  return meanError / (CENTS1 - 1);\n};\n\nconst offsetNote = <T extends KeyData>(note: T, offset: number) => ({\n  ...note,\n  fundamentalFq: note.fundamentalFq * offset,\n  fundamentalFqTWM: note.fundamentalFqTWM * offset,\n  fundamentalFqAutocorr: note.fundamentalFqAutocorr * offset,\n  harmonics: note.harmonics.map(peak => (peak ? { ...peak, center: peak.center * offset } : peak)),\n});\n\nconst minimizeKeyError = <T extends KeyData>(targetKey: T, errorFunc: { (key: T): number | null }): T => {\n  let offset = CENTS1;\n  let lastError = errorFunc(targetKey);\n  let lastTune = targetKey;\n\n  if (!lastError) return targetKey;\n\n  let flopped = false;\n  let itter = 0;\n  while (Math.abs(1 - offset) > 0.0001 && itter++ < 100) {\n    let testTune = offsetNote(lastTune, offset);\n    // console.log('test', offset, testTune.harmonics[0]?.center);\n    let testError = errorFunc(testTune) || 0;\n    if (testError < lastError) {\n      lastTune = testTune;\n      lastError = testError;\n    } else if (!flopped) {\n      flopped = true;\n      offset = 1 / offset;\n    } else {\n      flopped = false;\n      offset = offset / 2;\n    }\n  }\n  // console.log('minimized', lastError, targetKey.harmonics[0]?.center, lastTune.harmonics[0]?.center);\n\n  return lastTune;\n};\n\nconst minimizeOctaveInPlace = <T extends KeyData>(keys: { [key: number]: T }, start: number) => {\n  for (let key = start + 12; key <= 87; key += 12) {\n    keys[key] = minimizeKeyError(keys[key], targetKey => compareKeys(keys[key - 12], targetKey));\n  }\n  for (let key = start - 12; key >= 0; key -= 12) {\n    keys[key] = minimizeKeyError(keys[key], targetKey => compareKeys(keys[key + 12], targetKey));\n  }\n};\n\nexport const generateTunedUsingFifths = <T extends KeyData>(keys: { [key: number]: T }) => {\n  keys = deepCopy(keys);\n  const A440 = keys[48];\n  keys[48] = offsetNote(A440, 440 / (A440.harmonics[0]?.center || 440));\n\n  // A 48\n  let currOctave = 48;\n  minimizeOctaveInPlace(keys, currOctave);\n\n  // A --> D --> G --> C ...\n  for (let i = 0; i < 11; i++) {\n    if (currOctave < 30) currOctave += 12;\n    // eslint-disable-next-line no-loop-func\n    minimizeKeyError(keys[currOctave - 7], targetKey => compareKeys(keys[currOctave], targetKey));\n    currOctave += -7;\n    minimizeOctaveInPlace(keys, currOctave);\n  }\n\n  return keys;\n};\n\nexport const generateTunedUsingTotalEntropy = <T extends KeyData>(keys: { [key: number]: T }) => {\n  keys = deepCopy(keys);\n  const A440 = keys[48];\n  keys[48] = offsetNote(A440, 440 / (A440.harmonics[0]?.center || 440));\n  let minErr = findTotalEntropy(keys);\n  console.log(minErr);\n\n  for (let i = 0; i < 10; i++) {\n    let startKey = 48;\n    while (startKey !== 48) startKey = randomInt(88);\n\n    let key = startKey + 1;\n    while (key !== startKey) {\n      if (key === 88) key = 0;\n      // eslint-disable-next-line no-loop-func\n      keys[key] = minimizeKeyError(keys[key], targetKey => findTotalEntropy({ ...keys, [key]: targetKey }));\n      key += 1;\n    }\n\n    let totalErr = findTotalEntropy(keys);\n    if (totalErr < minErr) {\n      minErr = totalErr;\n    } else break;\n    console.log(i, minErr);\n  }\n\n  return keys;\n};\n\nexport const generateTunedUsingNoCurve = <T extends KeyData>(keys: { [key: number]: T }) => {\n  keys = deepCopy(keys);\n  for (let i = 0; i < 88; i++) {\n    keys[i].harmonics = approximateMissingHarmonics(keys[i].harmonics);\n    keys[i] = offsetNote(keys[i], KEYS[i].hz / (keys[i].harmonics[0]?.center || KEYS[i].hz));\n  }\n  return keys;\n};\n\nexport const findTotalEntropy = <T extends KeyData>(keys: { [key: number]: T }) => {\n  let totalErr = 0;\n  let count = 0;\n  for (let i = 0; i < 88; i++) {\n    for (let j = i + 1; j < 88; j++) {\n      let err = compareKeys(keys[i], keys[j]);\n      if (err !== null) {\n        totalErr += err;\n        count++;\n      }\n    }\n  }\n  return totalErr / count;\n};\n","type RGB = [number, number, number];\n\nfunction hex(i: number) {\n  var s = '0123456789abcdef';\n  if (i === 0 || isNaN(i)) return '00';\n  i = Math.round(Math.min(Math.max(0, i), 255));\n  return s.charAt((i - (i % 16)) / 16) + s.charAt(i % 16);\n}\n\nfunction convertToHex(rgb: RGB) {\n  return hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);\n}\n\nfunction trim(s: string) {\n  return s.charAt(0) === '#' ? s.substring(1, 7) : s;\n}\n\nfunction convertToRGB(hex: string): RGB {\n  const color: RGB = [\n    parseInt(trim(hex).substring(0, 2), 16),\n    parseInt(trim(hex).substring(2, 4), 16),\n    parseInt(trim(hex).substring(4, 6), 16),\n  ];\n  return color;\n}\n\nexport function generateGradient(colorStart: string, colorEnd: string, colorCount: number) {\n  let end = convertToRGB(colorStart);\n  let start = convertToRGB(colorEnd);\n  let len = colorCount;\n  let alpha = 0.0;\n  let saida = [];\n\n  for (let i = 0; i < len; i++) {\n    const c: RGB = [0, 0, 0];\n    alpha += 1.0 / len;\n\n    c[0] = start[0] * alpha + (1 - alpha) * end[0];\n    c[1] = start[1] * alpha + (1 - alpha) * end[1];\n    c[2] = start[2] * alpha + (1 - alpha) * end[2];\n\n    saida.push(convertToHex(c));\n  }\n\n  return saida;\n}\n","export const KEY_MP3 = [\n  'Piano.ff.01.A0.mp3',\n  'Piano.ff.02.Bb0.mp3',\n  'Piano.ff.03.B0.mp3',\n  'Piano.ff.04.C1.mp3',\n  'Piano.ff.05.Db1.mp3',\n  'Piano.ff.06.D1.mp3',\n  'Piano.ff.07.Eb1.mp3',\n  'Piano.ff.08.E1.mp3',\n  'Piano.ff.09.F1.mp3',\n  'Piano.ff.10.Gb1.mp3',\n  'Piano.ff.11.G1.mp3',\n  'Piano.ff.12.Ab1.mp3',\n  'Piano.ff.13.A1.mp3',\n  'Piano.ff.14.Bb1.mp3',\n  'Piano.ff.15.B1.mp3',\n  'Piano.ff.16.C2.mp3',\n  'Piano.ff.17.Db2.mp3',\n  'Piano.ff.18.D2.mp3',\n  'Piano.ff.19.Eb2.mp3',\n  'Piano.ff.20.E2.mp3',\n  'Piano.ff.21.F2.mp3',\n  'Piano.ff.22.Gb2.mp3',\n  'Piano.ff.23.G2.mp3',\n  'Piano.ff.24.Ab2.mp3',\n  'Piano.ff.25.A2.mp3',\n  'Piano.ff.26.Bb2.mp3',\n  'Piano.ff.27.B2.mp3',\n  'Piano.ff.28.C3.mp3',\n  'Piano.ff.29.Db3.mp3',\n  'Piano.ff.30.D3.mp3',\n  'Piano.ff.31.Eb3.mp3',\n  'Piano.ff.32.E3.mp3',\n  'Piano.ff.33.F3.mp3',\n  'Piano.ff.34.Gb3.mp3',\n  'Piano.ff.35.G3.mp3',\n  'Piano.ff.36.Ab3.mp3',\n  'Piano.ff.37.A3.mp3',\n  'Piano.ff.38.Bb3.mp3',\n  'Piano.ff.39.B3.mp3',\n  'Piano.ff.40.C4.mp3',\n  'Piano.ff.41.Db4.mp3',\n  'Piano.ff.42.D4.mp3',\n  'Piano.ff.43.Eb4.mp3',\n  'Piano.ff.44.E4.mp3',\n  'Piano.ff.45.F4.mp3',\n  'Piano.ff.46.Gb4.mp3',\n  'Piano.ff.47.G4.mp3',\n  'Piano.ff.48.Ab4.mp3',\n  'Piano.ff.49.A4.mp3',\n  'Piano.ff.50.Bb4.mp3',\n  'Piano.ff.51.B4.mp3',\n  'Piano.ff.52.C5.mp3',\n  'Piano.ff.53.Db5.mp3',\n  'Piano.ff.54.D5.mp3',\n  'Piano.ff.55.Eb5.mp3',\n  'Piano.ff.56.E5.mp3',\n  'Piano.ff.57.F5.mp3',\n  'Piano.ff.58.Gb5.mp3',\n  'Piano.ff.59.G5.mp3',\n  'Piano.ff.60.Ab5.mp3',\n  'Piano.ff.61.A5.mp3',\n  'Piano.ff.62.Bb5.mp3',\n  'Piano.ff.63.B5.mp3',\n  'Piano.ff.64.C6.mp3',\n  'Piano.ff.65.Db6.mp3',\n  'Piano.ff.66.D6.mp3',\n  'Piano.ff.67.Eb6.mp3',\n  'Piano.ff.68.E6.mp3',\n  'Piano.ff.69.F6.mp3',\n  'Piano.ff.70.Gb6.mp3',\n  'Piano.ff.71.G6.mp3',\n  'Piano.ff.72.Ab6.mp3',\n  'Piano.ff.73.A6.mp3',\n  'Piano.ff.74.Bb6.mp3',\n  'Piano.ff.75.B6.mp3',\n  'Piano.ff.76.C7.mp3',\n  'Piano.ff.77.Db7.mp3',\n  'Piano.ff.78.D7.mp3',\n  'Piano.ff.79.Eb7.mp3',\n  'Piano.ff.80.E7.mp3',\n  'Piano.ff.81.F7.mp3',\n  'Piano.ff.82.Gb7.mp3',\n  'Piano.ff.83.G7.mp3',\n  'Piano.ff.84.Ab7.mp3',\n  'Piano.ff.85.A7.mp3',\n  'Piano.ff.86.Bb7.mp3',\n  'Piano.ff.87.B7.mp3',\n  'Piano.ff.88.C8.mp3',\n];\n","import { Peak } from './findPeaks';\nimport { KEY_MP3 } from './keyMp3';\n\nexport const playNote = (peaks: (Peak | null)[], duration = 6) => {\n  const context = new AudioContext();\n  peaks.forEach(peak => {\n    if (!peak) return;\n    const o = context.createOscillator();\n    o.frequency.value = peak.center;\n    const g = context.createGain();\n\n    const maxGain = peak.amplitude / 255;\n    const zeroGain = 0.00001;\n    const sustainedGain = maxGain * 0.01;\n\n    // start at zero\n    g.gain.value = zeroGain;\n    // attack\n    g.gain.exponentialRampToValueAtTime(maxGain, context.currentTime + 0.01);\n    // decay\n    g.gain.exponentialRampToValueAtTime(sustainedGain, context.currentTime + 1);\n    // release\n    g.gain.exponentialRampToValueAtTime(zeroGain, context.currentTime + duration);\n\n    o.connect(g);\n    o.type = 'triangle';\n    g.connect(context.destination);\n    o.start(0);\n    o.stop(duration);\n  });\n  setTimeout(() => context.close(), duration * 333);\n};\n\nconst mp3Channels: { [channel: number]: HTMLAudioElement } = {};\n\nexport const playMp3 = (key: number, idx: number) => {\n  mp3Channels[idx] = mp3Channels[idx] || document.createElement('audio');\n  mp3Channels[idx].src = '/piano-tuning/mp3/' + KEY_MP3[key];\n  mp3Channels[idx].play();\n};\n","import { useEffect, useState } from 'react';\n\nexport const useVisibility = () => {\n  const [visible, setVisible] = useState(!document.hidden);\n\n  useEffect(() => {\n    const listener = () => {\n      if (visible === document.hidden) setVisible(!document.hidden);\n    };\n    window.addEventListener('visibilitychange', listener);\n    return () => window.removeEventListener('visibilitychange', listener);\n  }, [visible]);\n\n  return visible;\n};\n","interface StorageItem {\n  expiration: number;\n  value: any;\n}\n\ninterface DataStore {\n  [prop: string]: StorageItem;\n}\n\nlet memoryStore: DataStore = {};\n\nconst USE_LOCAL_STORE = typeof localStorage !== 'undefined';\nconst LOCAL_STORE_KEY = 'PIANO-TUNING-DATA-STORE';\nconst VALUE_EXPIRATION = 14 * 24 * 60 * 60 * 1000;\nconst EXPIRATION_CHECK_INTERVAL = 60 * 60 * 1000;\n\nlet lastExpirationCheck = 0;\nfunction checkForExpired() {\n  if (Date.now() < lastExpirationCheck + EXPIRATION_CHECK_INTERVAL) return;\n  const store = getStore();\n  Object.keys(store).forEach(key => {\n    if (store[key].expiration < Date.now()) delete store[key];\n  });\n  setStore(store);\n  lastExpirationCheck = Date.now();\n}\n\nfunction getStore(): DataStore {\n  if (USE_LOCAL_STORE) {\n    const dataStr = localStorage.getItem(LOCAL_STORE_KEY);\n    if (dataStr) return JSON.parse(dataStr);\n  }\n  return memoryStore;\n}\n\nfunction setStore(value: DataStore) {\n  memoryStore = value;\n  if (USE_LOCAL_STORE) {\n    localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify(value));\n  }\n}\n\nfunction set(key: string, value: any, expiration = VALUE_EXPIRATION) {\n  const store = getStore();\n  store[key] = {\n    expiration: Date.now() + expiration,\n    value,\n  };\n  setStore(store);\n  return value;\n}\n\nfunction get(key: string) {\n  const data = getStore()[key];\n  if (!data) return;\n  if (data.expiration < Date.now()) return clear(key);\n  return data.value;\n}\n\nfunction clear(key: string) {\n  const data = getStore();\n  delete data[key];\n  setStore(data);\n}\n\nexport const storageService = { set, get, clear, checkForExpired };\n","// sample rate = samples / second\n// fq = modulation / second\n// k = samples / modulation\n// --> fq = sample rate / k = samples / second / ( samples / modulation ) = modulations / second\n\nimport { findPeaks } from './findPeaks';\n\nexport const autoCorrelate = function (buffer: Uint8Array, sampleRate: number, minFq = 20, maxFq = 5000) {\n  let data: number[] = [];\n  const minK = Math.floor(sampleRate / maxFq) - 1;\n  const maxK = Math.ceil(sampleRate / minFq) + 1;\n  let n = buffer.length - maxK;\n\n  let bestR = 0;\n  let worstR = 1;\n  let bestK = -1;\n\n  // loop over all possible frequencies we want to test\n  // k = 8      --> 44100 / 8     = 5,512 hz (C8 = 4186.01hz)\n  // k = 2000   --> 44100 / 2000  = 22 hz (A0 = 27.5)\n  for (var k = minK; k < maxK; k++) {\n    let sum = 0;\n\n    n = buffer.length - k;\n    for (let i = 0; i < n; i++) {\n      const v1 = (buffer[i] - 128) / 128;\n      const v2 = (buffer[i + k] - 128) / 128;\n      sum += v1 * v2;\n      // sum +=  (v1-v2) * (v1-v2);\n    }\n\n    // const r = sum / (n + k);\n    const r = sum / n;\n    // const r = sum;\n\n    data.push(r);\n\n    if (r < worstR) worstR = r;\n\n    if (r > bestR) {\n      bestR = r;\n      bestK = k;\n    }\n  }\n\n  return data.map((r, k) => ({\n    r: (r - worstR) / (bestR - worstR),\n    k: k / bestK,\n    fq: sampleRate / (k + minK),\n  }));\n};\n\nexport const findFundamentalFqUsingAutocorrelation = function (\n  timeData: Uint8Array,\n  sampleRate: number,\n  minFq = 20,\n  maxFq = 5000,\n) {\n  const autocorrelation = autoCorrelate(timeData, sampleRate, minFq, maxFq);\n\n  const autoPeaks = findPeaks(\n    autocorrelation.map(a => a.r),\n    0.9,\n  );\n\n  // adjust peaks so that they correspond to the frequency, not the index\n  const autoPeaksFq = autoPeaks.map(peak => {\n    const idx = Math.floor(peak.center);\n    const dist = peak.center - idx;\n    const fq1 = autocorrelation[idx]?.fq;\n    const fq2 = autocorrelation[idx + 1]?.fq || fq1;\n    return { amplitude: peak.amplitude, center: fq1 * (1 - dist) + fq2 * dist };\n  });\n\n  let largestPeakFq = 0;\n  let largestPeakAmp = 0;\n\n  autoPeaksFq.forEach(peak => {\n    if (peak.amplitude > largestPeakAmp * 1.05) {\n      largestPeakAmp = peak.amplitude;\n      largestPeakFq = peak.center;\n    }\n  });\n\n  return {\n    autocorrelation,\n    autoPeaksFq,\n    largestPeakFq,\n  };\n};\n","import React from 'react';\n\nexport function downloadObjectAsJson(exportObj: any, exportName: string) {\n  const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(exportObj));\n  var downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', exportName);\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nexport function uploadJsonProps(cb: { (obj: any): unknown }) {\n  return {\n    type: 'file',\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => {\n      let files = e.target.files;\n      if (!files?.length) return;\n      const file = files[0];\n      let reader = new FileReader();\n      reader.onload = e => {\n        const file = e.target?.result;\n        cb(JSON.parse(file as string));\n      };\n      reader.readAsText(file);\n    },\n  };\n}\n","import { useRef, useState } from 'react';\n\nimport './App.css';\nimport { CanvasChart, useCanvasChart } from './components/chart';\nimport { Piano } from './components/piano';\nimport config from './config';\nimport { BrowserAudio } from './utils/browserAudio';\nimport { approximateMissingHarmonics, extractHarmonics } from './utils/extractHarmonics';\nimport { findPeaks, Peak } from './utils/findPeaks';\nimport { KEYS } from './utils/keys';\nimport { generateHarmonics } from './utils/predictHarmonics';\nimport { findFundamentalFqUsingTwoWayMismatch } from './utils/twoWayMismatchAlgo';\nimport { useAnimate } from './utils/useAnimate';\nimport { ZScoreBoundary } from './utils/zScore';\nimport { useKeyboard } from './utils/useKeyboard';\nimport { CENTS1, CENTS100 } from './utils/constants';\nimport {\n  compareKeys,\n  generateTunedUsingFifths,\n  generateTunedUsingNoCurve,\n  generateTunedUsingTotalEntropy,\n} from './utils/entropy';\nimport { generateGradient } from './utils/colorGradient';\nimport { playMp3, playNote } from './utils/playNote';\nimport { usePolling } from './utils/usePolling';\nimport { storageService } from './utils/storageService';\nimport { deepCopy } from './utils/deepCopy';\nimport { findFundamentalFqUsingAutocorrelation } from './utils/autocorrelation';\nimport { downloadObjectAsJson, uploadJsonProps } from './utils/jsonIO';\nimport { max, mean } from './utils/stat';\n\n/*\n\nTODO\n\nhave option to play steinway note wav files\nfix b0 and b flat 0\ntests for extract harmonics, might have a few bugs\nextract harmonics is missing some cases for steinway low notes\nmaybe fit curve to extract harmonics\nui menu drawer\ntests for twm algo for all notes, should be able to get note perfectly\nmenu options not cuasing rerender\nprogress bar for entropy tuning\n\n*/\n\ninterface PianoKeysData {\n  [key: number]: {\n    key: number;\n    score: number;\n    fundamentalFq: number;\n    fundamentalFqTWM: number;\n    fundamentalFqAutocorr: number;\n    harmonics: (Peak | null)[];\n  };\n}\n\nlet recordedHarmonics: PianoKeysData = storageService.get('recordedHarmonics') || {};\nlet tunedHarmonics: PianoKeysData = storageService.get('tunedHarmonics') || {};\n\nconst colorGradient = generateGradient('00FF00', 'FF0000', 100);\n\nconst defaultSettings = {\n  mode: 'recording' as 'tuning' | 'recording',\n  noteSounds: {\n    harmonics: 'tuned' as 'recorded' | 'tuned' | 'generated' | 'piano',\n    notes: [0] as number[],\n  },\n  tuning: {\n    curve: 'entropy' as 'none' | 'copy' | '7,12' | 'entropy',\n  },\n  transition: {\n    auto: 'next' as 'none' | 'next',\n  },\n  hiddenCharts: [] as string[],\n};\n\nfunction App() {\n  const audioRef = useRef<BrowserAudio>();\n  const lastValues = useRef({\n    autoChange: 0,\n    volume: [] as number[],\n    lastReset: 0,\n  });\n  const settingsRef = useRef<typeof defaultSettings>(storageService.get('tuningSettings') || defaultSettings);\n  const pianoKeyRef = useRef(0);\n  const [pianoKey, _setPianoKey] = useState(0); // currently focused key\n  const setPianoKey = (val: number) => {\n    const setting = settingsRef.current.noteSounds.harmonics;\n    if (!audioRef.current) {\n      if (setting === 'piano') {\n        const notes = settingsRef.current.noteSounds.notes || [];\n        if (notes.indexOf(0) !== -1) playMp3(val, 0);\n        if (notes.indexOf(4) !== -1 && val + 4 < 88) playMp3(val + 4, 4); // third\n        if (notes.indexOf(7) !== -1 && val + 7 < 88) playMp3(val + 7, 7); // fifth\n        if (notes.indexOf(12) !== -1 && val + 12 < 88) playMp3(val + 12, 12); // octave\n        if (notes.indexOf(24) !== -1 && val + 24 < 88) playMp3(val + 24, 24); // double  octave\n      } else {\n        let harmonics =\n          setting === 'recorded'\n            ? recordedHarmonics\n            : setting === 'tuned'\n            ? tunedHarmonics\n            : setting === 'generated'\n            ? {}\n            : setting === 'piano'\n            ? {}\n            : {};\n        harmonics = { ...harmonics } || {};\n        [0, 4, 7, 12, 24].forEach(i => {\n          const note = val + i;\n          if (!harmonics[note] && KEYS[note]) {\n            harmonics[note] = { harmonics: generateHarmonics(KEYS[note].hz, Math.ceil(88 - note) / 10) } as any;\n          }\n        });\n        const notes = settingsRef.current.noteSounds.notes || [];\n        if (notes.indexOf(0) !== -1) playNote(harmonics?.[val]?.harmonics);\n        if (notes.indexOf(4) !== -1 && val + 4 < 88) playNote(harmonics?.[val + 4]?.harmonics); // third\n        if (notes.indexOf(7) !== -1 && val + 7 < 88) playNote(harmonics?.[val + 7]?.harmonics); // fifth\n        if (notes.indexOf(12) !== -1 && val + 12 < 88) playNote(harmonics?.[val + 12]?.harmonics); // octave\n        if (notes.indexOf(24) !== -1 && val + 24 < 88) playNote(harmonics?.[val + 24]?.harmonics); // double  octave\n      }\n    }\n    _setPianoKey(val);\n    pianoKeyRef.current = val;\n  };\n  useKeyboard('ArrowLeft', () => {\n    if (pianoKey > 0) setPianoKey(pianoKey - 1);\n  });\n  useKeyboard('ArrowRight', () => {\n    if (pianoKey < 87) setPianoKey(pianoKey + 1);\n  });\n  usePolling(() => {\n    const storedRecordedHarmonics = JSON.stringify(storageService.get('recordedHarmonics'));\n    if (storedRecordedHarmonics !== JSON.stringify(recordedHarmonics)) {\n      storageService.set('recordedHarmonics', recordedHarmonics);\n    }\n\n    const storedTunedHarmonics = JSON.stringify(storageService.get('tunedHarmonics'));\n    if (storedTunedHarmonics !== JSON.stringify(tunedHarmonics)) {\n      storageService.set('tunedHarmonics', tunedHarmonics);\n    }\n\n    const storedSettings = JSON.stringify(storageService.get('tuningSettings'));\n    if (storedSettings !== JSON.stringify(settingsRef.current)) {\n      storageService.set('tuningSettings', settingsRef.current);\n    }\n  }, 60 * 1000);\n  const [, _rerender] = useState(0);\n  const rerender = () => _rerender(a => a + 1);\n\n  // highlight played keys with harmonic errors\n  const keyErrorStyles: { [key: number]: any } = {};\n  (() => {\n    const harmonics = settingsRef.current.noteSounds.harmonics === 'recorded' ? recordedHarmonics : tunedHarmonics;\n    const notes = settingsRef.current.noteSounds.notes;\n\n    const keyErrors: { [key: number]: number | null } = {};\n    const currKey = harmonics[pianoKey];\n    if (!currKey) return;\n    for (let key = 0; key < 88; key++) {\n      if (notes.indexOf(Math.abs((harmonics?.[key]?.key || 0) - currKey.key)) === -1) continue;\n      const err = compareKeys(currKey, harmonics[key]);\n      if (err !== null) {\n        keyErrors[key] = err;\n        const normErr = Math.floor(Math.min(99, err * 10));\n        keyErrorStyles[key + 1] = {\n          fill: `#${colorGradient[normErr]}`,\n        };\n      }\n    }\n  })();\n\n  const chartWidth = Math.min(window.innerWidth - 2, 1024);\n  const chartHeight = Math.max((chartWidth / 1024) * 300, 150);\n\n  const fftChart = useCanvasChart({\n    domain: {\n      x1: 0,\n      x2: 4500,\n      y1: 255,\n      y2: 0,\n    },\n    width: chartWidth,\n    height: chartHeight,\n  });\n  const focusedFftChart = useCanvasChart({\n    domain: {\n      x1: 1 / CENTS100,\n      x2: CENTS100,\n      y1: 255,\n      y2: 0,\n    },\n    width: chartWidth,\n    height: chartHeight,\n  });\n  const predictionChart = useCanvasChart({\n    domain: {\n      x1: -2,\n      x2: 104,\n      y1: 1,\n      y2: 0,\n    },\n    width: chartWidth,\n    height: chartHeight,\n  });\n  // const twmChart = useCanvasChart({\n  //   domain: {\n  //     x1: 0,\n  //     x2: 88,\n  //     y1: 1,\n  //     y2: 0,\n  //   },\n  // });\n  const autocorrelationChart = useCanvasChart({\n    domain: {\n      x1: 0,\n      x2: 4500,\n      y1: 1,\n      y2: 0,\n    },\n    width: chartWidth,\n    height: chartHeight,\n  });\n  const harmonicsChart = useCanvasChart({\n    domain: {\n      x1: -1,\n      x2: 50,\n      y1: 2,\n      y2: 0.8,\n    },\n    width: chartWidth,\n    height: chartHeight,\n  });\n  const tunningCurveChart = useCanvasChart({\n    domain: {\n      x1: -1,\n      x2: 88,\n      y1: 1 * CENTS100,\n      y2: 1 / CENTS100,\n    },\n    width: chartWidth,\n    height: chartHeight,\n  });\n\n  const chartVisible = (name: string) => (settingsRef.current.hiddenCharts?.indexOf(name) ?? -1) === -1;\n  const toggleChart = (name: string) => {\n    const idx = settingsRef.current.hiddenCharts.indexOf(name);\n    if (idx === -1) settingsRef.current.hiddenCharts.push(name);\n    else settingsRef.current.hiddenCharts.splice(idx, 1);\n    rerender();\n  };\n\n  useAnimate(() => {\n    const selectedKeyDef = KEYS[pianoKeyRef.current];\n\n    fftChart.clear();\n    focusedFftChart.clear();\n    predictionChart.clear();\n    harmonicsChart.clear();\n    tunningCurveChart.clear();\n    autocorrelationChart.clear();\n    // twmChart.clear();\n\n    // draw the recorded harmonics for the current key\n    (() => {\n      const tunedFundamentalFq = tunedHarmonics[pianoKeyRef.current]?.fundamentalFq || 0;\n      const recorededFundamentalFq = recordedHarmonics[pianoKeyRef.current]?.fundamentalFq || 0;\n\n      harmonicsChart.line({\n        x1: 0,\n        x2: 49,\n        y1: 1,\n        y2: 1,\n      });\n\n      harmonicsChart.line(\n        {\n          x1: 0,\n          x2: 49,\n          y1: (tunedFundamentalFq || recorededFundamentalFq) / selectedKeyDef.hz,\n          y2: (tunedFundamentalFq || recorededFundamentalFq) / selectedKeyDef.hz,\n        },\n        'red',\n      );\n\n      harmonicsChart.text({ x: 0, y: 1.9 }, `${selectedKeyDef.name} (${Math.round(selectedKeyDef.hz * 100) / 100})`);\n\n      if (recorededFundamentalFq)\n        harmonicsChart.text({ x: 0, y: 1.8 }, `Recorded (${Math.round(recorededFundamentalFq * 100) / 100})`);\n      if (tunedFundamentalFq)\n        harmonicsChart.text({ x: 0, y: 1.7 }, `Tuned (${Math.round(tunedFundamentalFq * 100) / 100})`, 'red');\n\n      // draw the peaks on the main FFT\n      (tunedHarmonics[pianoKeyRef.current]?.harmonics || recordedHarmonics[pianoKeyRef.current]?.harmonics)?.forEach(\n        (harmonic, idx) => {\n          if (!harmonic) return;\n          fftChart.line(\n            {\n              x1: harmonic.center,\n              x2: harmonic.center,\n              y1: 0,\n              y2: harmonic.amplitude,\n            },\n            'green',\n          );\n        },\n      );\n\n      // draw the recorded harmonic peaks\n      recordedHarmonics[pianoKeyRef.current]?.harmonics?.forEach((harmonic, idx) => {\n        if (!harmonic) return;\n        harmonicsChart.circle(\n          { x: idx, y: harmonic.center / selectedKeyDef.hz / (idx + 1) },\n          5,\n          `rgb(0 0 0 / ${Math.round(Math.min(100, (harmonic.amplitude + 30) / 2.55))}%)`,\n        );\n      });\n\n      // draw the tuned harmonic peaks\n      tunedHarmonics[pianoKeyRef.current]?.harmonics?.forEach((harmonic, idx) => {\n        if (!harmonic) return;\n        const fq = harmonic.center / selectedKeyDef.hz / (idx + 1);\n        harmonicsChart.line({ x1: idx - 0.5, x2: idx + 0.5, y1: fq, y2: fq }, `red`);\n      });\n    })();\n\n    // draw the tuning curve for all notes\n    (() => {\n      KEYS.forEach((key, idx) => {\n        const harmonicsRecorded = recordedHarmonics[idx]?.harmonics;\n        const harmonicsTuned = tunedHarmonics[idx]?.harmonics;\n\n        if (recordedHarmonics?.[idx]) recordedHarmonics[idx].harmonics = approximateMissingHarmonics(harmonicsRecorded);\n        let fundamentalFq = recordedHarmonics?.[idx]?.fundamentalFq || harmonicsRecorded?.[0]?.center;\n        if (fundamentalFq) {\n          tunningCurveChart.circle({\n            x: idx,\n            y: fundamentalFq / key.hz,\n          });\n        }\n\n        if (tunedHarmonics?.[idx]) tunedHarmonics[idx].harmonics = approximateMissingHarmonics(harmonicsTuned);\n        fundamentalFq = tunedHarmonics?.[idx]?.fundamentalFq || harmonicsTuned?.[0]?.center;\n        if (fundamentalFq) {\n          tunningCurveChart.line(\n            {\n              x1: idx - 0.5,\n              x2: idx + 0.5,\n              y1: fundamentalFq / key.hz,\n              y2: fundamentalFq / key.hz,\n            },\n            'red',\n          );\n        }\n\n        if (idx === pianoKeyRef.current) {\n          tunningCurveChart.line(\n            {\n              x1: idx,\n              x2: idx,\n              y1: CENTS100,\n              y2: 1 / CENTS100,\n            },\n            'blue',\n          );\n        }\n      });\n      tunningCurveChart.line({\n        x1: 0,\n        x2: 87,\n        y1: 1,\n        y2: 1,\n      });\n    })();\n\n    const audio = audioRef.current;\n    if (!audio) return;\n    const fqData = audio.getFrequencyData();\n    const timeData = audio.getTimeData();\n    const bucketWidth = audio.sampleRate / audio.fftSize;\n    const zScore = ZScoreBoundary(fqData);\n    const peaks = findPeaks(fqData, zScore).map(peak => ({ ...peak, center: peak.center * bucketWidth }));\n\n    // Main FFT Drawing\n    (() => {\n      // draw the FFT\n      fqData.forEach((val, idx) => {\n        fftChart.rect({\n          x1: idx * bucketWidth,\n          x2: (idx + 1) * bucketWidth,\n          y1: 0,\n          y2: val,\n        });\n      });\n\n      // draw the floor\n      zScore.forEach((val, idx) => {\n        if (idx === 0) return;\n        fftChart.line(\n          {\n            x1: idx * bucketWidth,\n            x2: (idx + 1) * bucketWidth,\n            y1: zScore[idx - 1],\n            y2: val,\n          },\n          'blue',\n        );\n      });\n\n      // draw the peaks\n      peaks.forEach((peak, idx) => {\n        fftChart.circle({ x: peak.center, y: peak.amplitude }, 5, 'red');\n\n        fftChart.text(\n          { x: 4000, y: 245 - (idx + 1) * 10 },\n          `Peak: ${Math.round(peak.center * 10) / 10} (${Math.round(peak.amplitude)})`,\n        );\n      });\n\n      // find the median distance between peaks\n      const distBetweenPeaks: number[] = [];\n      for (let i = 0; i < peaks.length; i++) {\n        distBetweenPeaks.push(peaks[i].center - (peaks[i - 1]?.center || 0));\n      }\n      const medianDistance = distBetweenPeaks[Math.floor(distBetweenPeaks.length / 2)];\n      fftChart.text({ x: 4000, y: 245 }, `Med Dist: ${Math.round(medianDistance * 10) / 10}`);\n    })();\n\n    // focused FFT drawing\n    (() => {\n      const harmonics =\n        tunedHarmonics[pianoKeyRef.current]?.harmonics || recordedHarmonics[pianoKeyRef.current]?.harmonics;\n      const center = harmonics?.find(p => p?.amplitude === Math.max(...harmonics.map(p => p?.amplitude || 0)))?.center;\n      if (!center) return;\n\n      const currentFq = tunedHarmonics?.[pianoKeyRef.current]?.fundamentalFq || selectedKeyDef.hz;\n      const adjustmentFactor = currentFq / center;\n\n      fqData.forEach((val, idx) => {\n        focusedFftChart.rect({\n          x1: ((idx - 0.5) * bucketWidth) / center,\n          x2: ((idx + 0.5) * bucketWidth) / center,\n          y1: 0,\n          y2: val,\n        });\n      });\n\n      focusedFftChart.line({ x1: 1, x2: 1, y1: 0, y2: 255 }, 'red');\n\n      peaks.forEach((peak, idx) => {\n        focusedFftChart.line(\n          {\n            x1: peak.center / center,\n            x2: peak.center / center,\n            y1: 0,\n            y2: 255,\n          },\n          'green',\n        );\n      });\n\n      const closestPeak = peaks.length\n        ? peaks.reduce((a, b) => (Math.abs(center - a.center) < Math.abs(center - b.center) ? a : b))\n        : null;\n\n      focusedFftChart.text(\n        { x: 1.001 / CENTS100, y: 240 },\n        `${selectedKeyDef.name} (${Math.round(selectedKeyDef.hz * 100) / 100})`,\n      );\n      focusedFftChart.text(\n        { x: 1.001 / CENTS100, y: 220 },\n        `Focused: ${Math.round(center * adjustmentFactor * 100) / 100}`,\n        'red',\n      );\n      focusedFftChart.text(\n        { x: 1.001 / CENTS100, y: 200 },\n        `Peak: ${Math.round((closestPeak?.center || 0) * adjustmentFactor * 100) / 100}`,\n        'green',\n      );\n      focusedFftChart.text({ x: 1.001 / CENTS100, y: 180 }, `Harmonic Shown: ${Math.round(center * 100) / 100}`);\n    })();\n\n    // store some data\n    const predictNote = () => {\n      // const closestNote = (fq: number) => {\n      //   let minDist = CENTS100;\n      //   let minKey: number | null = null;\n      //   KEYS.forEach(key => {\n      //     const keyDist = Math.abs(key.hz - fq) / key.hz;\n      //     if (keyDist < minDist) {\n      //       minDist = keyDist;\n      //       minKey = key.hz;\n      //     }\n      //   });\n      //   return minKey;\n      // };\n      // const distBetweenPeaks: number[] = [];\n      // for (let i = 0; i < peaks.length; i++) {\n      //   distBetweenPeaks.push(peaks[i].center - (peaks[i - 1]?.center || 0));\n      // }\n      // const medianDistance = distBetweenPeaks[Math.floor(distBetweenPeaks.length / 2)];\n      // const medianOutput = closestNote(medianDistance);\n\n      // const volume = mean(fqData);\n      // const zLevel = mean(zScore);\n      // const maxVolume = max(fqData);\n\n      // const { largestPeakFq } = findFundamentalFqUsingAutocorrelation(timeData, audio.sampleRate, 20, 5000);\n      // const autoCorrOutput = closestNote(largestPeakFq);\n\n      // const maxPeak = peaks.find(p => p.amplitude === Math.max(...peaks.map(p => p.amplitude)))?.center || 0;\n      // const maxPeakOutput = closestNote(maxPeak);\n\n      // const peakCount = peaks.length;\n\n      // let result: number | null = null;\n\n      // if (!result && medianOutput && medianOutput === autoCorrOutput && medianOutput === maxPeakOutput) {\n      //   // peaks count above 10 is not possible for fq above 600hz\n      //   if (peakCount < 10 || medianOutput < 600) result = medianOutput;\n      // }\n      // // autocorrelation is accurate up to about 2500hz\n      // if (!result && autoCorrOutput && autoCorrOutput < 2500) {\n      //   if (peakCount < 10 || autoCorrOutput < 600) result = autoCorrOutput;\n      // }\n\n      // // median distance between peaks gives a good approximation of what note we are hearing\n      // // - after about 1500hz starts showing problems since there is a lower harmonic at play\n      // if (!result && medianOutput && medianOutput < 1500) {\n      //   if (peakCount < 10 || medianOutput < 600) result = medianOutput;\n      // }\n      // // max peak is accurate for notes actually above 1000hz\n      // //  - but has a few problems with notes below that having harmonics up to about 2000hz\n      // if (!result && maxPeakOutput && maxPeakOutput > 2000) {\n      //   if (peakCount < 10) result = maxPeakOutput;\n      // }\n\n      // (window as any).timelineData = (window as any).timelineData || [];\n      // (window as any).timelineData.push(\n      //   `${volume},${maxVolume},${zLevel},${peakCount},${medianOutput},${autoCorrOutput},${maxPeakOutput},${result},${pianoKeyRef.current}`,\n      // );\n\n      (window as any).timelinePeaksData = (window as any).timelinePeaksData || [];\n      (window as any).timelinePeaksData.push({ peaks, key: pianoKeyRef.current });\n\n      // return result;\n    };\n    if (2 > 1) predictNote();\n\n    // draw the autocorrelation\n    (() => {\n      const currentFq =\n        tunedHarmonics?.[pianoKeyRef.current]?.fundamentalFqAutocorr ||\n        tunedHarmonics?.[pianoKeyRef.current]?.fundamentalFq ||\n        selectedKeyDef.hz;\n      const adjustmentFactor =\n        tunedHarmonics[pianoKeyRef.current]?.fundamentalFq /\n          (tunedHarmonics?.[pianoKeyRef.current]?.fundamentalFqAutocorr || 0) || 1;\n\n      const minFq = currentFq / CENTS100;\n      const maxFq = currentFq * CENTS100;\n\n      const { autocorrelation, largestPeakFq } = findFundamentalFqUsingAutocorrelation(\n        timeData,\n        audio.sampleRate,\n        minFq,\n        maxFq,\n      );\n\n      autocorrelationChart.setDomain({ x1: minFq, x2: maxFq, y1: 1, y2: 0 });\n      for (let i = 1; i < autocorrelation.length; i++) {\n        autocorrelationChart.rect({\n          x1: autocorrelation[i - 1].fq,\n          x2: autocorrelation[i].fq,\n          y1: 0,\n          y2: autocorrelation[i - 1].r,\n        });\n      }\n      autocorrelationChart.line({ x1: currentFq, x2: currentFq, y1: 0, y2: 1 }, 'red');\n      autocorrelationChart.line({ x1: largestPeakFq, x2: largestPeakFq, y1: 0, y2: 1 }, 'green');\n      autocorrelationChart.text(\n        { x: currentFq / CENTS100, y: 0.9 },\n        `${selectedKeyDef.name} (${Math.round(selectedKeyDef.hz * 100) / 100})`,\n      );\n      autocorrelationChart.text(\n        { x: currentFq / CENTS100, y: 0.8 },\n        `Focused: ${Math.round(currentFq * adjustmentFactor * 100) / 100}`,\n        'red',\n      );\n      autocorrelationChart.text(\n        { x: currentFq / CENTS100, y: 0.7 },\n        `Peak: ${Math.round(largestPeakFq * adjustmentFactor * 10) / 10}`,\n        'green',\n      );\n    })();\n\n    // extract and record the harmonics\n    (() => {\n      const extractHarmonicsForKey = (key: number) => {\n        const targetFq = KEYS[key].hz;\n        const extracted = extractHarmonics(peaks, targetFq);\n        return extracted;\n      };\n      const recordHarmonicsForKey = (key: number, extracted: ReturnType<typeof extractHarmonicsForKey>) => {\n        const targetFq = KEYS[key].hz;\n        if (extracted.score > (recordedHarmonics[key]?.score || 0)) {\n          // get two way mismatch fq\n          const stepSize = targetFq * (CENTS1 - 1);\n          const lowFq = targetFq - stepSize * 50;\n          const highFq = targetFq + stepSize * 50;\n          const maxFq = peaks[peaks.length - 1].center;\n          let { peakCenterFq } = findFundamentalFqUsingTwoWayMismatch({\n            lowFq,\n            highFq,\n            stepSize,\n            targetHarmonics: targetFq => generateHarmonics(targetFq, Math.round(maxFq / targetFq), 0.00055),\n            peaks,\n          });\n          // get autocorrelation fq\n          const { largestPeakFq } = findFundamentalFqUsingAutocorrelation(\n            timeData,\n            audio.sampleRate,\n            targetFq / CENTS100,\n            targetFq * CENTS100,\n          );\n          // fill in holes\n          const harmonics = approximateMissingHarmonics(extracted.harmonics);\n          let fundamentalFq = peakCenterFq;\n          if (fundamentalFq <= lowFq * 1.1 || fundamentalFq >= highFq * 0.9) fundamentalFq = harmonics[0]?.center || 0;\n          recordedHarmonics[key] = {\n            ...extracted,\n            harmonics,\n            fundamentalFq,\n            fundamentalFqTWM: peakCenterFq,\n            fundamentalFqAutocorr: largestPeakFq,\n            key,\n          };\n        }\n      };\n\n      const curNote = extractHarmonicsForKey(pianoKeyRef.current);\n\n      // if in tuning mode, reset the harmonics extracted each key press\n      const volume = max(fqData) || 0;\n      if (\n        settingsRef.current.mode === 'tuning' &&\n        mean(lastValues.current.volume) < 10 &&\n        volume > 50 &&\n        Date.now() - lastValues.current.lastReset > 2000 &&\n        curNote.score > (recordedHarmonics[pianoKeyRef.current]?.score || 0) * 0.5\n      ) {\n        delete recordedHarmonics[pianoKeyRef.current];\n        lastValues.current.lastReset = Date.now();\n      }\n      lastValues.current.volume.push(volume);\n      if (lastValues.current.volume.length > 10) lastValues.current.volume.shift();\n\n      recordHarmonicsForKey(pianoKeyRef.current, curNote);\n\n      if (settingsRef.current.transition.auto === 'next' && pianoKeyRef.current < 87) {\n        const nextNote = extractHarmonicsForKey(pianoKeyRef.current + 1);\n        if (nextNote.score > curNote.score && Date.now() - lastValues.current.autoChange > 2000) {\n          lastValues.current.autoChange = Date.now();\n          recordHarmonicsForKey(pianoKeyRef.current + 1, nextNote);\n          setPianoKey(pianoKeyRef.current + 1);\n        }\n      }\n    })();\n\n    // two way mismatch algo drawing\n    (() => {\n      if (peaks.length) {\n        const maxFq = peaks[peaks.length - 1].center;\n\n        // two way mismatch on current key +- 50 cents\n\n        const targetHarmonics = (fq: number) =>\n          (tunedHarmonics[pianoKeyRef.current]?.harmonics ||\n            // recordedHarmonics[pianoKeyRef.current]?.harmonics ||\n            generateHarmonics(fq, Math.round(maxFq / fq), 0.00055)) as Peak[];\n        const currentFq =\n          tunedHarmonics[pianoKeyRef.current]?.harmonics?.[0]?.center ||\n          // recordedHarmonics[pianoKeyRef.current]?.fundamentalFq ||\n          selectedKeyDef.hz;\n        const stepSize = currentFq * (CENTS1 - 1);\n\n        // since we adjust based on the first harmonic, but the other displayed values are the fundemantal frequency\n        const adjustmentFactor =\n          tunedHarmonics[pianoKeyRef.current]?.fundamentalFq /\n            (tunedHarmonics[pianoKeyRef.current]?.harmonics?.[0]?.center || 1) || 1;\n        // console.log(\n        //   tunedHarmonics[pianoKeyRef.current]?.fundamentalFq,\n        //   tunedHarmonics[pianoKeyRef.current]?.harmonics?.[0]?.center,\n        // );\n\n        const { prediction, maxPeak, peakCenterFq } = findFundamentalFqUsingTwoWayMismatch({\n          lowFq: currentFq - stepSize * 50,\n          highFq: currentFq + stepSize * 50,\n          stepSize,\n          targetHarmonics,\n          peaks,\n        });\n        // console.log(prediction);\n\n        prediction.forEach((weight, idx) => {\n          predictionChart.rect({ x1: idx - 0.5, x2: idx + 0.5, y1: 0, y2: weight });\n        });\n        predictionChart.line({ x1: maxPeak?.center || 0, x2: maxPeak?.center || 0, y1: 0, y2: 1 }, 'green');\n        predictionChart.line({ x1: 50, x2: 50, y1: 0, y2: 1 }, 'red');\n        predictionChart.text({ x: 0, y: 0.9 }, `${selectedKeyDef.name} (${Math.round(selectedKeyDef.hz * 100) / 100})`);\n        predictionChart.text(\n          { x: 0, y: 0.8 },\n          `Focused: ${Math.round(currentFq * adjustmentFactor * 100) / 100}`,\n          'red',\n        );\n        predictionChart.text(\n          { x: 0, y: 0.7 },\n          `Peak: ${Math.round(peakCenterFq * adjustmentFactor * 100) / 100}`,\n          'green',\n        );\n      }\n    })();\n\n    // (() => {\n    //   const keys = findClosestKeyUsingTwoWayMismatch(peaks);\n    //   keys.forEach((key, idx) => {\n    //     twmChart.rect({ x1: idx, x2: idx + 1, y1: 0, y2: key });\n    //   });\n    // })();\n  });\n\n  return (\n    <div className='App'>\n      {!audioRef.current ? (\n        <button\n          style={{\n            background: '#37c53c',\n            color: '#fff',\n            margin: 20,\n            border: '1px solid green',\n          }}\n          onClick={() => {\n            audioRef.current = new BrowserAudio({\n              fftSize: config('fftSize'),\n              minDecibels: config('minDecibels'),\n              maxDecibels: config('maxDecibels'),\n            });\n            rerender();\n          }}\n        >\n          Start Listening\n        </button>\n      ) : (\n        <button\n          style={{\n            background: '#f44336',\n            color: '#fff',\n            margin: 20,\n            border: '1px solid #a92319',\n          }}\n          onClick={() => {\n            audioRef.current = undefined;\n            rerender();\n          }}\n        >\n          Stop Listening\n        </button>\n      )}\n\n      <div style={{ overflowX: 'auto', overflowY: 'hidden', height: 150 }}>\n        <Piano onClick={setPianoKey} notes={[KEYS[pianoKey]]} keyStyles={keyErrorStyles} />\n      </div>\n\n      <div>\n        Mode\n        <select\n          value={settingsRef.current.mode}\n          onChange={e => {\n            settingsRef.current.mode = e.target.value as any;\n            rerender();\n          }}\n        >\n          <option value='recording'>Recording</option>\n          <option value='tuning'>Tuning</option>\n        </select>\n        <select\n          value={settingsRef.current.transition.auto}\n          onChange={e => {\n            settingsRef.current.transition.auto = e.target.value as any;\n            rerender();\n          }}\n        >\n          <option value='none'>Auto Transition Disabled</option>\n          <option value='next'>Auto Transition To Next Note</option>\n        </select>\n      </div>\n      <div>\n        Recorded\n        <button onClick={() => downloadObjectAsJson(recordedHarmonics, 'recorded.json')}>Download</button>\n        <input className='fileInput' {...uploadJsonProps(data => (recordedHarmonics = data))} />\n        <button onClick={() => delete recordedHarmonics[pianoKey]}>Clear Current</button>\n        <button onClick={() => (recordedHarmonics = {})}>Clear All</button>\n      </div>\n      <div>\n        Tuned\n        <button onClick={() => downloadObjectAsJson(tunedHarmonics, 'tuned.json')}>Download</button>\n        <input className='fileInput' {...uploadJsonProps(data => (tunedHarmonics = data))} />\n        <button onClick={() => (tunedHarmonics = {})}>Clear All</button>\n      </div>\n      <div>\n        Sounds\n        <select\n          value={JSON.stringify(settingsRef.current.noteSounds.notes)}\n          onChange={e => {\n            settingsRef.current.noteSounds.notes = JSON.parse(e.target.value);\n            rerender();\n          }}\n        >\n          <option value='[]'>No Sounds</option>\n          <option value='[0]'>Note Only</option>\n          <option value='[0,4]'>Note + Third</option>\n          <option value='[0,7]'>Note + Fifth</option>\n          <option value='[0,12]'>Note + Octave</option>\n          <option value='[0,24]'>Note + Double Octave</option>\n          <option value='[0,4,7]'>Note + Third + Fifth</option>\n          <option value='[0,4,7,12]'>Note + Third + Fifth + Octave</option>\n          <option value='[0,12,24]'>Note + Octave + Double Octave</option>\n          <option value='[0,4,7,12,24]'>Note + All</option>\n        </select>\n        <select\n          value={settingsRef.current.noteSounds.harmonics}\n          onChange={e => {\n            settingsRef.current.noteSounds.harmonics = e.target.value as any;\n            rerender();\n          }}\n        >\n          <option value='recorded'>Recorded Notes</option>\n          <option value='tuned'>Tuned Notes</option>\n          <option value='generated'>Generated Notes</option>\n          <option value='piano'>Sample Piano Sound</option>\n        </select>\n      </div>\n      <div>\n        Tuning\n        <select\n          value={settingsRef.current.tuning.curve}\n          onChange={e => {\n            settingsRef.current.tuning.curve = e.target.value as any;\n            rerender();\n          }}\n        >\n          <option value='none'>No Curve</option>\n          <option value='copy'>Same as Recorded</option>\n          <option value='7,12'>Tune With Fifths + Octaves</option>\n          <option value='entropy'>Tune With Entropy</option>\n        </select>\n        <button\n          onClick={() => {\n            const curve = settingsRef.current.tuning.curve;\n            if (curve === 'copy') tunedHarmonics = deepCopy(recordedHarmonics);\n            if (curve === 'none') tunedHarmonics = generateTunedUsingNoCurve(recordedHarmonics);\n            if (curve === '7,12') tunedHarmonics = generateTunedUsingFifths(recordedHarmonics);\n            if (curve === 'entropy') tunedHarmonics = generateTunedUsingTotalEntropy(recordedHarmonics);\n          }}\n        >\n          Generate Tuning Curve\n        </button>\n      </div>\n      <br />\n      <div className='chartTitle' onClick={() => toggleChart('fullFFT')}>\n        Full Spectrum FFT\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('fullFFT') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...fftChart} />\n      </div>\n      <div className='chartTitle' onClick={() => toggleChart('focusedFFT')}>\n        Focused FFT\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('focusedFFT') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...focusedFftChart} />\n      </div>\n      <div className='chartTitle' onClick={() => toggleChart('twm')}>\n        Two Way Mismatch\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('twm') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...predictionChart} />\n      </div>\n      {/* <div className='chartTitle' onClick={() => toggleChart('twm')}>\n        Two Way Keys\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('twm') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...twmChart} />\n      </div> */}\n      <div className='chartTitle' onClick={() => toggleChart('autocorr')}>\n        Autocorrelation\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('autocorr') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...autocorrelationChart} />\n      </div>\n      <div className='chartTitle' onClick={() => toggleChart('harmonics')}>\n        Current Note Harmonics\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('harmonics') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...harmonicsChart} />\n      </div>\n      <div className='chartTitle' onClick={() => toggleChart('curve')}>\n        Tuning Curve\n      </div>\n      <div className='chartContainer' style={{ height: chartVisible('curve') ? chartHeight + 2 : 0 }}>\n        <CanvasChart {...tunningCurveChart} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from 'react';\nimport { useVisibility } from './useVisibility';\n\nexport const usePolling = (cb: () => any, interval = 1000) => {\n  const visible = useVisibility();\n  useEffect(() => {\n    if (!visible) return;\n    let timeout: number = 0;\n    let active = true;\n    const polling = async () => {\n      clearTimeout(timeout);\n      if (!active) return;\n      await cb();\n      timeout = window.setTimeout(polling, interval);\n    };\n    timeout = window.setTimeout(polling, 0);\n    return function cleanup() {\n      active = false;\n      clearTimeout(timeout);\n    };\n  }, [visible, cb, interval]);\n};\n","import { useEffect } from 'react';\n\nexport const useAnimate = (fn: { (): unknown }) => {\n  useEffect(() => {\n    let breakLoop = false;\n    const loop = () => {\n      if (breakLoop) return;\n      fn();\n      requestAnimationFrame(loop);\n    };\n    loop();\n    return () => {\n      breakLoop = true;\n    };\n  }, [fn]);\n  return;\n};\n","// needs fixing - uses rolling average efficiency gain\nexport function ZScoreBoundary(samples: Uint8Array) {\n  const lag = 60;\n  const threshold = 2.5;\n  const signals = new Uint8Array(samples.length);\n  const sumArr: number[] = [];\n  const sum2diffArr: number[] = [];\n  const binArr: number[] = [];\n\n  // i = index within the sample (sometimes too big or too small)\n  for (let i = -lag; i < samples.length + lag; i++) {\n    const firstSampleIdx = Math.max(0, i - lag);\n    const lastSampleIdx = Math.min(i + lag, samples.length - 1);\n    let bin = lastSampleIdx - firstSampleIdx + 1;\n\n    // keep last sum, add in val[i+lag] ahead and remove val[i-lag-1] behind\n    let sum = sumArr[i - 1 + lag] || 0;\n    if (i + lag < samples.length) sum += samples[i + lag];\n    if (i - lag - 1 >= 0) sum -= samples[i - lag - 1];\n    const avg = sum / bin;\n\n    let sum2diff = 0;\n    for (let j = firstSampleIdx; j <= lastSampleIdx; j++) {\n      sum2diff += Math.pow(samples[j] - avg, 2);\n    }\n\n    sumArr[i + lag] = sum;\n    sum2diffArr[i + lag] = sum2diff;\n    binArr[i + lag] = bin;\n\n    if (i < 0 || i > samples.length) continue;\n\n    let std = Math.pow(sum2diff / (bin - 1), 0.5);\n    std = Math.min(10, std);\n\n    signals[i] = Math.min(threshold * std + avg, 255);\n  }\n\n  // console.log(\n  //   sum2diffArr.map((v, i) => Math.pow(v / (binArr[i] - 1), 0.5)).join(\",\")\n  // );\n\n  return signals;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"piano_key__38M4z\",\"ivory\":\"piano_ivory__A0tOg\",\"ebony\":\"piano_ebony__3WXM6\",\"lit\":\"piano_lit__2Tqvo\"};"],"sourceRoot":""}